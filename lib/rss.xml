<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Game Engineering Kempten]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>Game Engineering Kempten</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Thu, 24 Oct 2024 16:35:41 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Thu, 24 Oct 2024 16:35:12 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[Abstraktionsebenen Flussdiagramm]]></title><description><![CDATA[ 
 <br>Programm in Hochsprache<br>
Von einem Menschen geschrieben (z.B. C, C++, Assembler, ...)<br>Programm in Maschinensprache<br>
Per Compiler aus dem Programm in Hochsprache erzeugt<br>Betriebssystem<br>
Lädt Programm im Machienensprache, stellt Schnittstellen zur Maschiene zur Verfügung<br>Machine<br>
Kann Instruktionen in Maschinensprache verstehen und ausführen<br>Logische Schaltkreise<br>
Die Maschine setzt sich aus logischen Schaltkreisen zusammen<br>Theorie<br>
Liefert Ideen und Basis für Maschine und Logik]]></description><link>repository\attachments\abstraktionsebenen-flussdiagramm.html</link><guid isPermaLink="false">repository/Attachments/Abstraktionsebenen Flussdiagramm.canvas</guid><pubDate>Thu, 24 Oct 2024 16:30:59 GMT</pubDate></item><item><title><![CDATA[Console Game Framework Struktur]]></title><description><![CDATA[ 
 <br>GameObject<br>Transform<br>Console Game Engine<br>mask<br>
negative / positive<br>Shape<br>Texture<br>Collision<br>translate<br>scale<br>Type<br>
CIRCLE<br>
ELIPSIS<br>
RECTANGLE<br>
TRIANGLE<br>CIRCLE<br>
center:Vector2<br>
radius:int<br>ELIPSIS<br>
center1:Vector2<br>
center2:Vector2<br>
radius:int<br>RECTANGLE<br>
center:Vector2<br>
dimensions:Vector2<br>TRIANGLE<br>
point1:Vector2<br>
point2:Vector2<br>
point3:Vector2<br>pattern<br>
e.g. "XOXO"<br>dimensions<br>shape<br>layer<br>shape<br>layer]]></description><link>repository\attachments\console-game-framework-struktur.html</link><guid isPermaLink="false">repository/Attachments/Console Game Framework Struktur.canvas</guid><pubDate>Thu, 24 Oct 2024 16:31:00 GMT</pubDate></item><item><title><![CDATA[Erstellen eines Programms (.exe-Datei)]]></title><description><![CDATA[ 
 <br>Objektdatei<br>
meinCode.obj<br>Aufführbare Datei<br>
meinCode.exe<br>Quelldatei<br>
meinCode.ccp<br>Headerdatei<br>
meinCode.h<br>Weitere (evtl. eigene)-Bibliotheken (.lib), Objektdateien<br>Standardbibliothek]]></description><link>repository\attachments\erstellen-eines-programms-(.exe-datei).html</link><guid isPermaLink="false">repository/Attachments/Erstellen eines Programms (.exe-Datei).canvas</guid><pubDate>Thu, 24 Oct 2024 16:31:00 GMT</pubDate></item><item><title><![CDATA[RAM Register]]></title><description><![CDATA[ 
 Speicher<br>Register 0<br>Register 1<br>IP-Register<br>Register 2<br>...<br>Steuereinheitlesen / schreiben]]></description><link>repository\attachments\ram-register.html</link><guid isPermaLink="false">repository/Attachments/RAM Register.canvas</guid><pubDate>Thu, 24 Oct 2024 16:31:01 GMT</pubDate></item><item><title><![CDATA[3D CGI]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br><br>
<br>Filmindustrie, VFX (Tron (1982 wie 2010), LOTR, Avatar, etc…) 
<br>Viele andere (Film-)produktionen (Nachrichten etc) 
<br>Werbebranche – Visualisierung 

<br>Wissenschaft, Medizin, Lehre
<br>Produktvisualisierung 
<br>Architekturvisualisierung 
<br>Industrie


<br>Games 
<br>Virtual / Augmented Reality
]]></description><link>repository\3d-cgi.html</link><guid isPermaLink="false">repository/3D CGI.md</guid><pubDate>Thu, 24 Oct 2024 16:31:02 GMT</pubDate></item><item><title><![CDATA[Abstraktionsebenen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:IT-Systeme" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IT-Systeme</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:IT-Systeme" class="tag" target="_blank" rel="noopener nofollow">#IT-Systeme</a><br>
 Abstraktionsebenen Flussdiagramm]]></description><link>repository\abstraktionsebenen.html</link><guid isPermaLink="false">repository/Abstraktionsebenen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:02 GMT</pubDate></item><item><title><![CDATA[Angeblich nicht lösbare Gleichungen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br>Gleichungen mit transzendenten Stellen und Polynomen.<br><br>z. B. <br><br>Durch Einsetzen von Werten  bringen.<br><br><br><br>
Setze :<br>
<br>
<br>Beispiel: 
<br>Es gilt 
<br><br><br><br><br><br>
Lösung:<br>
<br>
<br>Beispiel: <br>

<br>Start: 
<br>]]></description><link>repository\angeblich-nicht-lösbare-gleichungen.html</link><guid isPermaLink="false">repository/Angeblich nicht lösbare Gleichungen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:02 GMT</pubDate></item><item><title><![CDATA[Animation]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>"Belebung der Szene"

<br>Zeiteinheit: Frame


<br>Viele Methoden:

<br>manuell
<br>prozedurale akquiriert: Motion Capture


<br>Typische Techniken

<br>Basistechnik: Parametrisches Key-framing
<br>Kinematik, inverse Kinematik
<br>


]]></description><link>repository\animation.html</link><guid isPermaLink="false">repository/Animation.md</guid><pubDate>Thu, 24 Oct 2024 16:31:03 GMT</pubDate></item><item><title><![CDATA[Animation Geschichte]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br><br>
<br>Beginn konventionelle Animation im Film

<br>2D-Handzeichnungen, Winsor McCay mit Gertie the Dinosaur (1914)
<br>Earl Hurd und Jhon Bray: mehrere Schichten durch durchsichtige Cels (von Celluloid)


<br>Disney
<br>Innovationsträger, erstmals Sound in Steamboat Willie (1928)
<br>multiplane camera

<br>Kamera über mehrere Ebenen angebracht
<br>Jede Ebene enthält eine "Animationszelle" und kann in 6 Richtungen bewegt werden
<br>Entfernungen der Kamera kann verändert werden


<br>Multiplane Camera, ermöglicht erstmals:

<br>Nahe Objekte bewegen sich schneller als entfernte (vgl. Parallax)
<br>motion blur
<br>Dadurch guter "Tiefeneindruck"


<br><br>
<br>Die 70er: 

<br>Frühe 70er: Hauptsächlich im Forschungsbereich, University of Utah 
<br>Späte 70er: Einfache Computeranimation bereits kommerziell nutzbar (Star Wars 1977, Alien 1979) 


<br>Die 80er 

<br>Produktionshäuser (eigene Software, teilweise spezielle Hardware), Lucasfilm und Pixar werden mit CA bekannt 
<br>Oft wird zu dieser Zeit in SciFi-Filmen der Weltraumpart oder Monitorinhalte mit CA realisiert  kein Zwang zur Realitätsnähe 


<br>Die 90er: 

<br>CA wird normal 
<br>Meilensteine z.B.: 

<br>Künstlich erzeugte „Aliens“ in: Terminator II (1991), Jurassic Park (1993) 
<br>Forrest Gump (1994): Computererzeugter Ping-Pong Ball, neue Figur in altes Filmmaterial 
<br>Toy Story (1995): Komplett CA 
<br>Titanic (1998): künstliche Figuren auf dem sinkenden Schiff, Wasser


<br>Kommerzielle Spezialsoftware entsteht (Autodesk 3D Studio (1990), Lightwave 3D (1990), Alias : Wavefront, später Maya (1998))


<br><br>
<br>First and Foremost: Echtzeitfähigkeit! 

<br>Natürlich auf Kosten der Qualität/Komplexität 
<br>Dadurch kann Mehraufwand für Artists entstehen, Modelle müssen in verschiedenen Auflösungen vorliegen (LOD), u.ä. 


<br>Weitere Limitationen der maximalen Qualität bei Games: 

<br>Sound muss echtzeitfähig sein 
<br>Spielphysik muss live ausgewertet werden (Kollisionsberechnung usw.) 
<br>Gesamtes Event-handling… 


<br>Interaktion: 

<br>Animationen laufen nicht linear ab, sondern interaktiv


<br>Automatisierte Animation: 

<br>In Filmen können Animation in fest vorgegebener Weise ablaufen, in Spielen dagegen erwarten wir AI-gesteuerte Animation 
<br>Diese kann physikalisch begründet sein und muss direkt ausgewertet werden 


<br>Umgebungen: 

<br>es kann weniger auf die Kamerasicht reduziert werden, die Umgebung muss vollständiger ausgearbeitet werden 
<br>Viele Vereinfachungen sind nicht mehr akzeptabel (z.B. Bild einer Türe in einen anderen Raum  im Film kein Problem, im Spiel geht man davon aus, man kann sie öffnen) 
<br>Meist kann der Spieler die Umgebung direkt verändern, etwa Gegenstände verschieben, werfen, deformieren usw.


]]></description><link>repository\animation-geschichte.html</link><guid isPermaLink="false">repository/Animation Geschichte.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Arithmetische Operatoren]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br><br><br>
<br>A ist Ziel der Zuweisung  von rechts nach links
<br>= ist Zuweisungsoperator Linker
<br>B ist linker Operand
<br>C ist rechter Operand
<br>

<br>ist der +Operator


<br><br>
<br>Division mit ganzzahligen Operanden liefert ein ganzzahliges Ergebnis (abgerundet)
<br>Wenn mindestens ein Operand vom Typ Gleitkommazahl ist (Variable oder Konstante), dann ist auch das Ergebnis eine Gleitkommazahl. 
<br>Natürlich muss der Typ der Ergebnisvariable eine Gleitkommazahl auch darstellen können!
<br>int ergA = 8 / 3; // ergA = 2 
float ergB = 8 / 3; // ergB = 2.0000 
int ergC = 7 / ergB; // ergC = 3 
float ergE = 7 / ergB; // ergE = 3.5000 
int ergF = 7.f / 3; // ergF = 2 
float ergG = 7 / 3.f; // ergG = 2.33333
Copy<br><br>
<br>Ist nur auf ganzzahlige Operanden anwendbar
<br>Verwendung z.B. für das Erzeugen von Zufallszahlen in einem bestimmten Wertebereich, z.B.

<br>Positionen von Bäumen auf einem Spielfeld
<br>Würfeln
<br>...


<br>Beispiel: int erg = x % 3
<br><br>
<br>Kombination aus mehreren Operanden und Operatoren
<br>Es gelten die üblichen Rechenregeln (Punkt vor Strich bzw. Klammerung), d.h. %, *, / haben Vorrang vor +, -
<br>Bei binären Operatoren gleicher Priorität (hier * und /) wird von links nach rechts ausgewertet.
<br>int varA = 2; 
float varB = 2.5f; 
float varC = varA * varB + 1; // (2*2.5) + 1 
float varD = varA * (varB + 1.5f) / 2; // (2*(2.5 + 1.5))/2
Copy<br><br><br>
<br>Inkrement- und Dekrementoperatoren verändern den Wert um 1
<br>Die Postfix-Notation (i++) und Präfix-Notation (++i) verhalten sich im Kontext unterschiedlich!

<br>Wirkung i++: es wird der alte Wert von i verwendet und im Anschluss inkrementiert
<br>Wirkung ++i es wird erst inkrementiert und dann der neue Wert verwendet
<br>Gleiches gilt für den Dekrementoperator


<br><br><br>int varE = 4 * 5 % 3; //(4 * 5) % 3 .... von links nach rechts 
int tempA(3); int varF = tempA++ * 2; // varF = 6 
varF = tempA; // varF = 4 
varF = ++tempA * 2; // varF = 10
Copy<br><br>
<br>Arithmetische Zuweisungen und Operationen können kombiniert werden, z.B.: *=, /=, %=, +=, -=
<br>//Zusammengesetzte Zuweisungen 
int vari = 2; 
vari += 3; // vari = 5 
vari = 2; 
vari = vari + 3; //vari = 5 

int vary = 2; 
vari = 2; 
vari *= vary + 2; // vari = 8 
vari = 2; 
vari = vari * (vary + 2); // vari = 8
Copy<br><br><br><br><br>int max = 3; 
int testvarB = 1; 
bool testvarA = testvarB &lt; max - 1; // testvarA = true 
int testvarC = testvarB == max - 1; // testvarC = 0 entspricht false 
int testvarD = (testvarC = testvarB + 2) == max; // testvarD = 1 entspricht true
Copy<br><br><br><br><br><br><br><br><br>
<br>true wird als 1 und false als 0 Interpretiert 
<br>Ein Wrt unterschiedlich von 0 wird als true Interpretiert
<br>&amp;&amp; hat einen höheren Vorrang als ||
<br>//boolsche Variablen 
bool bVar1 = true; 
bool bVar2 = false; 
bool bVar3 = true; 
bool bVar4 = (bVar1 || bVar2) &amp;&amp; bVar3 &amp;&amp; !bVar1; // false 

bool istrue = false; 
istrue = 1 &gt; !istrue; // false 
istrue = 3 &lt; 5 &amp;&amp; 2 &lt; 2 + !(10 + true); // false
Copy<br><br>
<br>Die Werte von Integer-Variablen können bitweise verändert werden mit den Operatoren

<br>&amp; (UND), | (ODER), ^ (exklusives ODER), ~ (NICHT), &lt;&lt; (Linksshift), &gt;&gt; (Rechtsshift)


<br><br><br>
<br>Shiftoperatoren haben die Form: x &lt;&lt; y

<br>x ist der Wert dessen Bits verschoben werden sollen
<br>y ist der Wert, um wie viele Bitstellen verschoben werden soll


<br>z = x &lt;&lt; y bedeutet, dass die Bits des Wertes x um y Stellen nach links verschoben wird und in z abgespeichert wird.

<br>z ist undefiniert

<br>wenn y &gt; Anzahl der darstellenden Bits von x
<br>Wenn y &lt; 0




<br><br><br>]]></description><link>repository\arithmetische-operatoren.html</link><guid isPermaLink="false">repository/Arithmetische Operatoren.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Betragsgleichungen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br><br>
<br>
<br>
<br>
<img alt="Funtionsgraphen f_sin und g_abs(sin).png" src="\repository\attachments\funtionsgraphen-f_sin-und-g_abs(sin).png"><br><br>Beispiel: <br><br>I:  : <br>
II:  : <br>
III:  : <br>I:  :<br>
<br>
<br>
<br>
 <br>
II:  :<br>
<br>
<br>
 <br>
III:  :<br>
<br>
<br>
<br>
 <br>]]></description><link>repository\betragsgleichungen.html</link><guid isPermaLink="false">repository/Betragsgleichungen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:04 GMT</pubDate><enclosure url="repository\attachments\funtionsgraphen-f_sin-und-g_abs(sin).png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\funtionsgraphen-f_sin-und-g_abs(sin).png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Binomialkoeffizient]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br><br> <br>
<br>
<br>Die Faktoren 43 abwärts kürzen sich weg
]]></description><link>repository\binomialkoeffizient.html</link><guid isPermaLink="false">repository/Binomialkoeffizient.md</guid><pubDate>Thu, 24 Oct 2024 16:31:04 GMT</pubDate></item><item><title><![CDATA[Binomischer Lehrsatz]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<br>
<br>
<br>
<br><br>
<br>
<br>
<br>
<br><br><br>
<br>Die Potenz von  sinkt von  bis  über  Term Teile
<br>Die Faktoren vor jedem Term Teil sind durch die -te Reihe in Pascals Dreieck gegeben:<br>
<img alt="Pascals_Triangle.png" src="\repository\attachments\pascals_triangle.png"><br>

<br>Jeder Term Teil mit einem ungeraden Exponenten von  wird subtrahiert nicht addiert 
]]></description><link>repository\binomischer-lehrsatz.html</link><guid isPermaLink="false">repository/Binomischer Lehrsatz.md</guid><pubDate>Thu, 24 Oct 2024 16:31:04 GMT</pubDate><enclosure url="repository\attachments\pascals_triangle.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\pascals_triangle.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Blender Hotkeys]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>]]></description><link>repository\blender-hotkeys.html</link><guid isPermaLink="false">repository/Blender Hotkeys.md</guid><pubDate>Thu, 24 Oct 2024 16:31:05 GMT</pubDate></item><item><title><![CDATA[Blender UI]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>File &gt; Link : Verlinken von Blender Dateien um Änderungen Automatisch zu übernehmen
<br>File &gt; Import/Export : Import und Export bestimmter Dateien
<br>File &gt; External Data : Management externer Daten, damit Datei portabel wird
]]></description><link>repository\blender-ui.html</link><guid isPermaLink="false">repository/Blender UI.md</guid><pubDate>Thu, 24 Oct 2024 16:31:05 GMT</pubDate></item><item><title><![CDATA[Das erste Programm]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br>
<br>Integrated Development Environments<br>
IDE(s) erleichtern das Entwickler Leben

<br>Der Entwickler schriebt den Code und nimmt ein paar Einstellungen vor, den Rest übernimmt die IDE.


<br>Wichtigste Features

<br>Aufsetzen von Projekten
<br>Quellcodeeditor mit Syntax Highlighting
<br>Hilfe beim Fehlersuchen
<br>Organisation von Quellcode
<br>Erstellung von GUIs mit Editoren
<br>Kompilieren und Linken auf Knopfdruck


<br>Wir arbeiten in dieser Vorlesung vor allem mit Visual Studio
<br><br>
<br>Programmierer: Eingeben des Quellcodes in Quelldateien (i.d.R. mit der Endung .cpp) und Header-Dateien (mit der Endung .h)
<br>IDE: Die Header-Dateien werden in die Quelldateien kopiert und dem Compiler zur Übersetzung in die Maschinensprache übergeben

<br>Erzeugung einer Objektdatei (oder Modul) pro Quelldatei (i.d.R. mit der Endung .obj)


<br>IDE: Der Linker bindet die Objektdateien aller Module und Funktionen aus der Standardbibliothek zu einer ausführbaren Datei (.exe)<br>
 Erstellen eines Programms (.exe-Datei)
<br><br>
<br>Am Anfang der Kompilierphase kommt der Präprozessor zum Einsatz. Es wird noch keine Objektdatei erzeugt. Hier werden alle Informationen gebündelt (mit #include) und vorbereitet
<br>#include bindet hier die Funktionalität für die Ein und Ausgabe (hier std::cout) auf der Konsole direkt in die Quelldatei mit ein.
<br><br>
<br>int main() ist der Aufruf der Hauptfunktion (Main-Funktion) und hat

<br>Einen ganzzahligen Rückgabewert (int)
<br>Den Funktionsnamen main


<br>Die Main-Funktion muss immer vorhanden sein!

<br>Von dort werden alle anderen Funktionen/Anweisungen aufgerufen 
<br>Im Funktionsblock innerhalb der Klammern {…} spielt sich alles ab, was das Programm berechnen soll.


<br><br>
<br>Kommentare, die den Programmcode nicht beeinflussen, werden am Zeilenanfang mit // gekennzeichnet
<br>Kommentare erhöhen die Lesbarkeit des Codes enorm und sollten nicht gespart werden
<br><br>
<br>cout (console output) ist ein Objekt der Klasse ostream aus der Standardbibliothek, das die Ausgabe auf der Konsole ermöglicht. 
<br>std:: kennzeichnet den Namensbereich der C++ Standardbibliothek (std = standard) und der STL, in dem cout definiert ist
<br>&lt;&lt; ist der Operator, der die Zeichen in den sog. Ausgabestrom schiebt. 
<br>endl (end of line) erzeugt einen Zeilenvorschub 
<br>Die auszugebenden Zeichen werden in Anführungsstriche geschrieben 

<br>Die Zeichenkombination \n sagt dem Ausgabestrom, dass hier ebenfalls Zeilenvorschub erzeugt werden soll.


<br><br>
<br>Die Anweisung return liefert am Ende des Funktionsblocks der Main-Funktion sog. Exit-Code zurück. 
<br>Dies ist ein ganzzahliger Wert vom Datentyp int ( = integer) 
<br>Üblicherweise wird bei einem fehlerfreien Ablauf 0 zurückgegeben.
<br><br>
<br>Es können Funktionsbausteine ohne vorheriges Verwenden der namespaces verwendet werden<br>
using namespace std -&gt; cout &lt;&lt; "text" &lt;&lt; endl;<br>
using std::cout -&gt; cout &lt;&lt; "text" &lt;&lt; std::endl;
<br><br>
<br>Alle Anweisungen enden mit Strichpunkten ;
<br>Per #include eingebundene Dateien

<br>Aus der Standardbibliothek mit &lt;&gt;
<br>Aus den lokalen, eigenen Dateien mit ""


<br>Am besten immer &lt;&gt; Dateien vor "" Dateien inkludieren.
<br>Hilfestellung der IDE:

<br>Syntax-Highlighting:<br>
Schlüsselwörter / durch die Sprache reservierte Wörter werden farblich abgegrenzt
<br>Syntax Vorschläge, z.B.

<br>beim Inkludieren
<br>beim Zugriff auf Funktionen




<br>//Microsoft spezifische Variante mit Argumenten
int _tmain(int argc, _TCHAR* argv[]){ 
	return 0; 
} 

//C++ Standard ohne Argumente 
int main(){ 
	return 0;
} 

//C++ Standard mit Argumenten 
int main(int argc, char* argv[]){ 
	return 0; 
}
Copy<br>
<br>Es kann aber nur eine Main Funktion geben 
]]></description><link>repository\das-erste-programm.html</link><guid isPermaLink="false">repository/Das erste Programm.md</guid><pubDate>Thu, 24 Oct 2024 16:31:05 GMT</pubDate></item><item><title><![CDATA[Differenzialrechnung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br>Differentialrechnung = Steigungsberechnung<br>
<a data-href="Integralrechnung" href="\repository\integralrechnung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Integralrechnung</a> = umgekehrte Differenzierung/Flächenberechnung<br><br><br>Y axisX axisExpression 1Expression 2f(x)(f(x+h)xx+hExpression 7Expression 8f(x+h)-f(x)hf(x)f(x)(f(x+h)(f(x+h)xxx+hx+hf(x+h)-f(x)f(x+h)-f(x)hh<br>Wenn der Grenzwert einer Funktion existiert, dann heißt  1. Ableitung, Differentialquotient, Steigung.<br>
Rechnen der Steigung: Differenzieren<br>
Beispiel für nicht differenzierbare Funktion:<br>
 bei <br>
 bei <br>Definition
Wenn  bei  für  existiert, dann heißt die Funktion differenzierbar 
<br>Definition:
Wenn   existiert, dann heißt sie stetig
<br>Tldr
 differenzierbar  stetig
<br><br><br><br>, , <br>
<br>
 (Summenregel)<br>
 (Produktregel)<br>
 (Quotientenregel)<br>
 (Kettenregel)<br><br><br>
oder:<br>
 (Kettenregel )<br><br>
<br>
]]></description><link>repository\differenzialrechnung.html</link><guid isPermaLink="false">repository/Differenzialrechnung.md</guid><pubDate>Thu, 24 Oct 2024 16:31:05 GMT</pubDate></item><item><title><![CDATA[Doppelbrüche]]></title><description><![CDATA[<a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<a data-href="Uebung Potenzen Wurzeln Addiere Brueche Vereinfache Brueche.jpg" href="\repository\attachments\uebung-potenzen-wurzeln-addiere-brueche-vereinfache-brueche.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Potenzen Wurzeln Addiere Brueche Vereinfache Brueche.jpg</a><br><br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
]]></description><link>repository\doppelbrüche.html</link><guid isPermaLink="false">repository/Doppelbrüche.md</guid><pubDate>Thu, 24 Oct 2024 16:31:06 GMT</pubDate></item><item><title><![CDATA[Ein - und Ausgabe über die Konsole]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br>
<br>Die Standardbibliotheken bieten zwei Varianten Text auf der Konsole ein- und auszugeben:

<br>Die C Variante für die Ausgabe:

<br>#include &lt;stdio.h&gt; bietet int printf (const char * format, ...);


<br>Die C++ Variante für die Ausgabe

<br>#include &lt;iostream&gt; bietet cout &lt;&lt; ... &lt;&lt; endl;




<br>#include &lt;stdio.h&gt; 
#include &lt;iostream&gt;

int main() 
{ 
	printf("START THE GAME\n"); //Die C Variante 
	std::cout &lt;&lt; "START THE GAME" &lt;&lt; std::endl; //Die C++ Variante 
	return 0;
}
Copy<br><br>
<br>Diverse Datentypen und Funktionen der Standardbibliothek sind gekapselt in einem sog. Namensbereich (namespace, um sie vor Überschreibungen durch den Programmierer zu schützen. 
<br>Zugriff auf STD Features: 

<br>Man macht den Namespace und damit alle darin vorhandenen Funktionen, etc. mit using namespace std; für den eigenen Code verfügbar 
<br>der namespace muss vor Verwendung der Bibliotheksfunktion explizit angegeben werden std::cout 
<br>Man macht einzelne Features verfügbar z.B. using std::cout


<br>#include &lt;iostream&gt;
int main()
{
    std::cout &lt;&lt; "Servus!" &lt;&lt; std::endl;
    return 0;
}
Copy<br>#include &lt;iostream&gt;
using namespace std;
int main()
{
    cout &lt;&lt; "Servus!" &lt;&lt; endl;
    return 0;
}
Copy<br>#include &lt;iostream&gt;
using std::cout;
int main()
{
    cout &lt;&lt; "Servus!" &lt;&lt; std::endl;
    return 0;
}
Copy<br>
<br>Es gibt vier Standardstreams 

<br>cin ist ein Objekt der Klasse istream: Standardeingabe 
<br>cout ist ein Objekt der Klasse ostream: Standardausgabe 
<br>cerr ist ein Objekt der Klasse ostream: ungepufferte Fehlerausgabe 
<br>clog ist ein Objekt der Klasse ostream: gepufferte Fehlerausgabe


<br>Klassenhierarchie 

<br>ios ist die Basisklasse 

<br>Verbindung zum Datenstrom für die Ausgabe auf dem Bildschirm 
<br>Formatierung der zu streamenden Daten


<br>istream hat die Eigenschaften von ios und 

<br>kümmert sich um das Einlesen 


<br>ostream hat die Eigenschaften von ios und 

<br>kümmert sich um das Ausgeben 


<br>iostream hat die Eigenschaften von ios, ostream und istream 
<br>&lt;&lt; und &gt;&gt; sind eigentlich Bit-Shift-Operatoren, wurden aber für die Ein- und Ausgabe überschrieben (Thema von Programmieren 2) 
<br>Die Operatoren &lt;&lt; für die Ausgaben und &gt;&gt; für die Eingabe sind für die elementaren Datentypen und strings definiert.


<br><br>
<br>
gehören zur Klasse ios

<br>
werden zur Formatierung der Streams genutzt z.B.

<br>Darstellung von Zahlen
<br>Genauigkeit von Gleitkommazahlen


<br>
sind für die elementaren Datentypen sowie für strings definiert.

<br>
Es gibt immer eine Standardeinstellung der Flags (der übliche Verwendungsmodus)

<br>
Flags sind Statusbits, die mit setf() und unsetf() gesetzt werden können.

<br>
Manipulatoren sind Funktionen, die letztendlich die Flags setzen. Sie sind in der Regel einfacher zu benutzen als Flags.

<br>endl ist z.B. der Manipulator, der einen Zeilenumbruch auslöst


<br>cout &lt;&lt; 100 &lt;&lt; endl; //Standardmaeßig wird kein + Zeichen mit angebgen, Ausgabe: 100
cout &lt;&lt; showpos &lt;&lt; 100 &lt;&lt; endl; //Einsatz des Manipulators (+ Zeichen mit angeben) Ausgabe: +100
cout &lt;&lt; 20 &lt;&lt; endl; //Ausgabe: +20
cout &lt;&lt; noshowpos; //Einsatz des Manipulators (+ Zeichen nicht angeben)
cout &lt;&lt; 100 &lt;&lt; endl; //Ausgabe: 100
cout &lt;&lt; 20 &lt;&lt; endl; //Ausgabe: 20

// Der Manipulator showpos ruft im Hintergrund cout.setf(ios::showpos) auf
cout.setf(ios::showpos); //Setze das Flag (+ Zeichen mit angeben)
cout &lt;&lt; 100 &lt;&lt; endl; //Ausgabe: +100
cout &lt;&lt; 20 &lt;&lt; endl; //Ausgabe: +20
cout.unsetf(ios::showpos); //Setze das Flag (+ Zeichen nicht angeben)
cout &lt;&lt; 100 &lt;&lt; endl; //Ausgabe: 100
cout &lt;&lt; 20 &lt;&lt; endl; //Ausgabe: 20
Copy<br><br><br>//Darstellung von ganzen Zahlen
cout &lt;&lt; "Standard (12): " &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "oct (12): " &lt;&lt; oct &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "hex (12): " &lt;&lt; hex &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "uppercase (12): " &lt;&lt; uppercase &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "nouppercase (12): " &lt;&lt; nouppercase &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "dec (12): " &lt;&lt; dec &lt;&lt; 12 &lt;&lt; endl;
cout &lt;&lt; "dec (-12): " &lt;&lt; dec &lt;&lt; -12 &lt;&lt; endl;
  
//Darstellung von Gleitpunktzahlen
cout &lt;&lt; "Standard (12.333f): " &lt;&lt; 12.333f &lt;&lt; endl;
cout &lt;&lt; "showpoint (12.f): " &lt;&lt; showpoint &lt;&lt; 12.f &lt;&lt; endl;
cout &lt;&lt; "showpoint (12.333f): " &lt;&lt; showpoint &lt;&lt; 12.333f &lt;&lt; endl;
cout &lt;&lt; "noshowpoint (12.333f): " &lt;&lt; noshowpoint &lt;&lt; 12.333f &lt;&lt; endl;
cout &lt;&lt; "noshowpoint (12.f): " &lt;&lt; noshowpoint &lt;&lt; 12.f &lt;&lt; endl;
cout &lt;&lt; "noshowpoint (12.000f): " &lt;&lt; noshowpoint &lt;&lt; 12.000f &lt;&lt; endl;
cout &lt;&lt; "fixed (12.333f): " &lt;&lt; fixed &lt;&lt; 12.333f &lt;&lt; endl;
cout &lt;&lt; "scientific (12.333f): " &lt;&lt; scientific &lt;&lt; 12.333f &lt;&lt; endl;
Copy<br><br>
<br>Gleitpunktzahlen werden standardmäßig mit 6 Dezimalziffern ausgegeben

<br>Einstellungen zur Genauigkeit sind möglich mit

<br>Dem Manipulator setprecision(int n)  setzt die Genauigkeit auf 

<br>#include &lt;iomanip&gt; notwendig


<br>Den Methoden

<br>int precision (int n)  setzt die Genauigkeit auf 




<br>Die aktuelle Genauigkeit erhält man mit

<br>int precision() 




<br>//Darstellung von Gleitpunktzahlen
cout &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
cout &lt;&lt; "Standard (12345678.9f): " &lt;&lt; 12345678.9f &lt;&lt; endl;
cout &lt;&lt; setprecision(8) &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
cout.precision(3);
cout &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
cout &lt;&lt; endl;
Copy<br><br>
<br>Um wieder auf die alten Einstellungen zurückzusetzen kann der aktuelle Flagstatus gesichert und später wieder gesetzt werden.<br>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
<br>=======
<br>//Flags sichern
cout.precision(8);
cout &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
ios init(NULL);
init.copyfmt(cout); //Sichere die Standard-Formatierungseinstellungen
cout.precision(3);
cout &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
cout.copyfmt(init); //Wiederherstellen der alten Formatierungseinstellungen
cout &lt;&lt; "Standard (12.3456789f): " &lt;&lt; 12.3456789f &lt;&lt; endl;
cout &lt;&lt; endl;
Copy<br><br>
<br>Der Operator &lt;&lt; kann seine Ausgabe in sog. Ausgabefeldern positionieren
<br>Definiert werden kann

<br>Die Feldbreite, z.B. die Spaltenbreite einer Tabelle
<br>Gültig nur für die nachfolgende Ausgabe


<br>Die Ausrichtung, rechts oder linksbündig

<br>Gültig bis zur nächsten Änderung der Ausrichtung


<br>Die Füllzeichen, d.h. das Leerzeichen wird ersetzt durch ein selbst definiertes Zeichen

<br>Gültig bis ein anderes Füllzeichen gesetzt wird


<br><br><br>//Ausgabefelder
char ch = '*';
cout &lt;&lt; setw(20) &lt;&lt; setfill(ch) &lt;&lt; left &lt;&lt; "STATISTIK" &lt;&lt; endl;
cout &lt;&lt; setfill(' '); //Neues Füllzeichen (Leerzeichen) wird gesetzt
//Feldbreite muss bei jeder Ausgabe neu gesetzt werden
//Ausrichtung soll in den Spalten verschieden sein, für die Überschrift der Spalte NAME ist left noch gültig
cout &lt;&lt; setw(9) &lt;&lt; "NAME" &lt;&lt; "|" &lt;&lt; setw(9) &lt;&lt; right &lt;&lt; "SCORE" &lt;&lt; "|" &lt;&lt; endl;
cout &lt;&lt; setw(9) &lt;&lt; left &lt;&lt; "Christoph" &lt;&lt; "|" &lt;&lt; right &lt;&lt; setw(9) &lt;&lt; "24" &lt;&lt; "|" &lt;&lt; endl;
cout &lt;&lt; setw(9) &lt;&lt; left &lt;&lt; "Anna" &lt;&lt; "|" &lt;&lt; right &lt;&lt; setw(9) &lt;&lt; "22" &lt;&lt; "|" &lt;&lt; endl;
cout &lt;&lt; setw(20) &lt;&lt; setfill(ch) &lt;&lt; ch &lt;&lt; endl;
cout &lt;&lt; endl;
Copy<br>STATISTIK***********
NAME     |    SCORE|
Christoph|       24|
Anna     |       22|
********************
Copy<br>cout.width(10); 
cout.fill('0'); 
cout &lt;&lt; -20 &lt;&lt; endl; 
cout.width(10); 
cout.fill('0'); 
//setze das Vorzeichen ganz links und fülle zwischen Wert und Vorzeichen mit Füllzeichen auf 
cout &lt;&lt; internal &lt;&lt; -20 &lt;&lt; endl;
Copy<br>0000000-20
-000000020
Copy<br><br>
<br>American Standard Code for Information Interchange (ASCII) 
<br>Zeichenkodierung für den Standardzeichensatz im englischsprachigen Raum. 
<br>Druckbare Zeichen: 

<br>das lateinische Alphabet in Groß - und Kleinschreibung, 
<br>die zehn arabischen Ziffern sowie 
<br>einige Interpunktionszeichen (Satzzeichen, Wortzeichen) und andere Sonderzeichen 


<br>Nicht druckbare Steuerzeichen: 

<br>Ausgabezeichen z.B. Tabulator, 
<br>Protokollzeichen z.B. Übertragungsende 
<br>Datensatztrennzeichen


<br><br>//Ausgabe von Zeichen und Strings
char aChar = 'X';
cout &lt;&lt; aChar &lt;&lt; ", " &lt;&lt; 'X' &lt;&lt; endl;
//Zuweisung des ASCII Codes als ganze Zahl
char aCharASCII = 89;
cout &lt;&lt; aCharASCII &lt;&lt; ", " &lt;&lt; 'Y' &lt;&lt; endl;
//Ausgabe des ASCII Codes eines Zeichens
int aCharInt = 'X';
cout &lt;&lt; aCharInt &lt;&lt; ", " &lt;&lt; 'X' &lt;&lt; endl;
//Ausgabe von Strings
string aString("START THE GAME");
cout &lt;&lt; aString &lt;&lt; endl;
//Ausgabe mit Steuerzeichen und Zwischenzeichen
string anotherString("START \t THE \n GAME"); //Tabulator und neue Zeile
cout &lt;&lt; anotherString &lt;&lt; endl;
anotherString = "START \0 THE GAME"; // Ausgabe bis \0
cout &lt;&lt; anotherString &lt;&lt; endl;
string ring = "\a"; //Ein Signalton
cout &lt;&lt; ring &lt;&lt; endl;
//Ausgabe von booleschen Werten
bool gamehasstarted = true;
cout &lt;&lt; gamehasstarted &lt;&lt; endl;
cout &lt;&lt; !gamehasstarted &lt;&lt; endl;
//Der Manipulator boolalpha gibt die Zeichenversion des booleschen Wert aus
cout &lt;&lt; boolalpha &lt;&lt; gamehasstarted &lt;&lt; endl;
Copy<br><br>Steuerzeichen in Strings können die Ausgabe beeinflussen <br>
<br>\t setzt den Tabulator 
<br>\n erzeugt einen Zeilenvorschub (wie endl;) 
<br>\a erzeugt einen Signalton 
<br>\0 bewirkt, dass nur bis dorthin ausgegeben wird.
<br><br>
<br>Der überschriebene Operator &gt;&gt; der Klasse istream liest ein Eingabefeld in eine Variable ein.
<br>Die Eingabe wird nach der zuletzt eingestellten Zahlenbasis (oct, dec, hex) konvertiert.
<br>Die Anzahl der eingelesenen Zeichen richtet sich nach der zuletzt eingestellten Feldbreite, die analog zur Breite des Ausgabefelds definiert werden kann z.B. mit

<br>cin &gt;&gt; setw(5);


<br>Fehlermöglichkeiten 

<br>Im Eingabepuffer stehen noch Daten, die bei der nächsten Eingabe fälschlicherweise eingelesen werden 

<br>Es werden mehrere Wörter für einen string eingetippt
<br>Das Wort ist länger als die Breite des Eingabefeldes 
<br>Für einen int werden andere Zeichen als Zahlen eingegeben z.B. Eingabe 30 EUR für den Preis 




<br>Besser man löscht

<br>den Eingabepuffer mit cin.ignore(); bzw. cin.ignore(std::numeric_limits::max(), '\n'); 
<br>evtl. gesetzte Flags mit cin.clear();


<br>//Zeichen einlesen
string name;
int age;
char favoritChar;

cout &lt;&lt; "Geben Sie Ihren Spielernamen an: ";
cin &gt;&gt; setw(5); //Es können 4 Zeichen eingelesen werden, das String-Ende-Zeichen benötigt das 5te Zeichen
cin &gt;&gt; name;

cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');//Eingabepuffer wird geleert
cin.clear(); //evtl. gesetzte Flags werden gelöscht

cout &lt;&lt; "Wie alt sind Sie: ";
cin &gt;&gt; dec &gt;&gt; age; //sicherstellen, dass Zahlenbasis auf dec gestellt ist

cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');//Eingabepuffer wird geleert
cin.clear(); //evtl. gesetzte Flags werden gelöscht

cout &lt;&lt; "Geben Sie Ihren Lieblingsbuchstaben an: ";
cin &gt;&gt; favoritChar; //eine Eingabe von ABC würde A liefern
cout &lt;&lt; endl;

cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');//Eingabepuffer wird geleert
cin.clear(); //evtl. gesetzte Flags werden gelöscht

cout &lt;&lt; "Sie heissen " &lt;&lt; name &lt;&lt; " und sind " &lt;&lt; age &lt;&lt; " Jahre alt. Ihr Lieblingsbuchstabe ist " &lt;&lt; favoritChar &lt;&lt; endl;
cout &lt;&lt; endl;
Copy<br>//Eingabe von Ganzzahlen
int aInt;
cin &gt;&gt; oct &gt;&gt; aInt; //Die Eingabe ist eine Oktalzahl Eingabe 10 dann einezahl = 8;
cout &lt;&lt; aInt &lt;&lt; endl;
cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');
cin.clear(); //evtl. gesetzte Flags werden gelöscht

cin &gt;&gt; hex &gt;&gt; aInt; //Die Eingabe ist eine Oktalzahl Eingabe A dann einezahl = 10;
cout &lt;&lt; aInt &lt;&lt; endl;
cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');
cin.clear(); //evtl. gesetzte Flags werden gelöscht

//Eingabe von Gleitkommazahlen
cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');
cin.clear(); //evtl. gesetzte Flags werden gelöscht
float anotherFloat; //Alternativ double oder long double
cin &gt;&gt; anotherFloat; //Eingaben 20 oder -20.33 oder 20e10 sind möglich;
cout &lt;&lt; fixed &lt;&lt; anotherFloat &lt;&lt; endl;
cin.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), '\n');
cin.clear(); //evtl. gesetzte Flags werden gelöscht
Copy<br><br>
<br>Eine ganze Zeile, d.h. auch Steuerzeichen und mehrere Wörter liest man mit der Methode getline ein, z.B. 

<br>getline(cin, mystring, ch) liest alles bis zum ch
<br>getline(cin, mystring) liest bis zum bis zum Newline Zeichen '\n'


<br>//Unformatiertes Einlesen
string phrase;
cout &lt;&lt; "Geben Sie ihren Lieblingsspruch ein: ";
getline(cin, phrase); //Eingabe: Oans Zwoa
cout &lt;&lt; endl; //Ausgabe: Oans Zwoa
cout &lt;&lt; phrase &lt;&lt; endl;

cout &lt;&lt; "Geben Sie ihren Lieblingsspruch ein: ";
getline(cin, phrase, '!'); //Eingabe: Oans! Zwoa!
cout &lt;&lt; endl; //Ausgabe: Oans
cout &lt;&lt; phrase &lt;&lt; endl;
Copy]]></description><link>repository\ein-und-ausgabe-über-die-konsole.html</link><guid isPermaLink="false">repository/Ein - und Ausgabe über die Konsole.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Einführung in Blender]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br><br><a data-href="Blender Hotkeys" href="\repository\blender-hotkeys.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Blender Hotkeys</a><br>
<a data-href="Blender UI" href="\repository\blender-ui.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Blender UI</a><br>
<a data-href="Objekte in Blender" href="\repository\objekte-in-blender.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Objekte in Blender</a>]]></description><link>repository\einführung-in-blender.html</link><guid isPermaLink="false">repository/Einführung in Blender.md</guid><pubDate>Thu, 24 Oct 2024 16:31:06 GMT</pubDate></item><item><title><![CDATA[Einführung in die Informatik Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Einführung-Informatik" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Einführung-Informatik</a> <a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> 
 <br><a href=".?query=tag:Einführung-Informatik" class="tag" target="_blank" rel="noopener nofollow">#Einführung-Informatik</a> <a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a> <br>
<br>Einführung

<br><a data-href="Geschichte der Informatik" href="\repository\geschichte-der-informatik.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiBackpack" aria-label="LiBackpack" data-icon="LiBackpack" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-backpack"><path d="M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"></path><path d="M8 10h8"></path><path d="M8 18h8"></path><path d="M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"></path><path d="M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path></svg></span>Geschichte der Informatik</a>
<br><a data-href="Was ist Informatik" href="\repository\was-ist-informatik.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiBackpack" aria-label="LiBackpack" data-icon="LiBackpack" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-backpack"><path d="M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"></path><path d="M8 10h8"></path><path d="M8 18h8"></path><path d="M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"></path><path d="M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path></svg></span>Was ist Informatik</a>


<br><a data-href="Information, Informationsdarstellung und -Verarbeitung" href="\repository\information,-informationsdarstellung-und-verarbeitung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiBackpack" aria-label="LiBackpack" data-icon="LiBackpack" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-backpack"><path d="M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"></path><path d="M8 10h8"></path><path d="M8 18h8"></path><path d="M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"></path><path d="M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path></svg></span>Information, Informationsdarstellung und -Verarbeitung</a>

<br>Information
<br>Definitionen, Darstellung von Text, Wahrheitswerten, Zahlen
<br>Informationsverarbeitung


<br>Vom Problem zur Softwarelösung

<br>Problem Spezifikation
<br>Algorithmus
<br>Programm


<br>Grundlegende Konzepte imperativer Programmiersprachen

<br>Datenrepräsentation: In welcher Form werden Daten im Rechner gespeichert?
<br>Verarbeitung: Wie werden Anweisungen strukturiert
<br>Objekte: Neuer einheitlicher Ansatz


<br>Elementare Algorithmen

<br>Suchen und Sortieren
<br>Komplexität von Algorithmen

<br>Berechenbarkeit
<br>Komplexitätsklassen




<br>Übersetzen von Programmen

<br>Formalismen zur Syntaxbeschreibung

<br>Grammatiken
<br>Syntaxdiagramme
<br>erkennende Automaten


<br>Übersetzung von Programmiersprachen

<br>lexikalische Analyse
<br>Syntaxanalyse
<br>Ausführung




<br>Grundlagen des Software-Engineerings

<br>Software-Lebenszyklus
<br>Software-Entwicklungsmodelle

<br>Wasserfallmodell
<br>Spiralmodel
<br>Inkrementelle Modelle
<br>V-Modell
<br>Agile Modelle




<br>Wirtschaftliche und gesellschaftliche Bedeutung der Informatik

<br>Informatik als Beschäftigungsfaktor
<br>Gesellschaftliche Veränderung durch die Informatik


<br>Literatur:<br>
<br>H.P. Gumm und M. Sommer Einführung in die Informatik. ISBN 9783486719956
<br>H. Ernst, J. Schmidt und G. Beneken Grundkurs Informatik: Grundlagen und Konzepte für die erfolgreiche IT-Praxis - Eine umfassende, praxisorientiere Einführung. ISBN 9783658146344
<br>Helmut Herold u.a. Grundlagen der Informatik. ISBN 9783868944488
]]></description><link>repository\einführung-in-die-informatik-orga.html</link><guid isPermaLink="false">repository/Einführung in die Informatik Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Elementare Datentypen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br><br>int diceResult
Copy<br>int : Datentyp<br>
diceResult : Variablen Name<br>
<br>Variablen

<br>haben einen eindeutigen Namen,
<br>speichern veränderbare Werte in Programmen,

<br>d.h. diceResult wird beim klassischen Würfeln die Werte 1 bis 6 annehmen
<br>Wird wieder gewürfelt nimmt die Variable (vielleicht) einen neuen Wert an




<br>Datentypen

<br>definieren welche Werte die Variable annehmen kann?

<br>Welche Art von Werten z.B. wahr/falsch oder  oder 
<br>Welcher Wertebereich , , oder ...
<br>werden von C++ bereitgestellt, d.h. es gibt bereits definierte Basisdatentypen für boolsche Werte, natürliche Zahlen, …
<br>können auch selbst definiert werden, z.B. ein Datentyp Monster




<br><br>
<br>Deklaration:

<br>Wir legen den Namen der Variable und dessen Datentyp fest
<br>Der Compiler reserviert den Speicher
<br>Variable hat noch unbestimmten Wert


<br>Definition

<br>Wir weisen der Variablen einen konkreten Wert zu.


<br><br>
<br>Elementare Datentypen

<br>Wahrheitswerte 

<br>bool


<br>Zeichen

<br>char


<br>Ganzzahlen

<br>short
<br>int
<br>long


<br>Gleitkommazahlen

<br>float
<br>double
<br>long double




<br><br>
<br>Bei der Deklaration &amp; Definition

<br>Zahlen am Anfang des Namens 
<br>Wahl eines bereits für den Compiler reservierten Wortes (erkennt man in Entwicklungsumgebungen an Syntaxhighlights)


<br>int 123num; // Zahl am Start nicht erlaubt
int bool; // Bestimmte Namen nicht zugelassen

int speedKMH = 25.7; // Würde abgerundet werden auf 25
int undefinierteVariableA; // Noch nicht definiert!
int VariableB = undefinierteVariableA; // Auch nicht definiert!
Copy<br><br>
<br>Modifier

<br>signed: Vorzeichen erlaubt
<br>unsigned: Nur Positive Zahlen
<br>short bzw. long spezifizieren die Größe des Datentyps:<br>
mindestens 16 bit bzw. 32bit


<br>Das Datenmodell wird durch die Zielplattform festgelegt

<br>32 bit Systeme / 64 bit Systeme


<br><br>Modifier signed und unsigned<br>
<br>unsigned ist Abkürzung von unsigned int
<br>Wenn vorzeichenbehaftet (signed), dann bestimmt das oberste Bit das Vorzeichen.
<br>Ohne Angabe eines Modifiers sind die Datentypen normalerweise vorzeichenbehaftet.
<br>FEHLERQUELLE: Overflow!<br>
Typische Overflow Fehler:
<br>Eine Variable wird ständig (z.B. pro Frame) nach oben gezählt un setzt sich irgendwann selbst zurück.

<br>Spielzeit
<br>gefahrene Meter
<br>Anzahl der Schüsse


<br><br><br>
<br>Konstanten

<br>werden immer dezimal dargestellt:

<br>gebrochener Anteil (Nachkommastellen) werden vom ganzzahligen Anteil getrennt, z.B. 10.5
<br>exponentielle Schreibweise


<br>werden wie folgt geschrieben

<br>Float-Konstanten: 9.2f
<br>Doube-Konstanten: 9.2 oder 9.2d


<br>Erweiterte Gleitpunktzahlentypen seit C++23


<br><br>Gleitkommazahlen haben nur eine begrenzte Genauigkeit.<br>float fvarA = 20.0001f;
float fvarB = 20.00009f;

std::cout &lt;&lt; fvarA == fvarB;
Copy<br>würde true ausgeben.<br>
Dies kann dazu führen, dass werte von Gleitkommazahlen zu klein werden um mit ihnen rechnen zu können.<br><br>
<br>Wichtigster Datentyp zur

<br>Kontrolle des Programmflusses
<br>Implementierung von Logik


<br>Kann true oder false sein, hat aber intern auch nummerische Werte (true  0, false  0)
<br>Verwendung für Logik des Programmflusses

<br>Ergebnisse eines Vergleichs oder einer logischen Verknüpfung (UND, ODER, NICHT und Kombinationen davon)
<br>Setzen von Flags, z.B. initialisierungOK


<br><br>
<br>Konstante Variablen

<br>werden mit dem Schlüsselwort const vor dem Datentyp und dem Namen der Variable deklariert: `const type name
<br>sind Variablen, deren Wert einmal definiert wird und sich dann nicht mehr ändert, z.B. Anzahl der Levels, maximale Anzahl der Spieler, …
<br>werden durch den Compiler vor Überschreibung geschützt.


<br>const int aConstInt = 10; 
int aInt = 2; 
aConstInt = aInt; //Geht nicht!
Copy<br>
<br>Der Präprozessordirektive #define

<br>wird eine Textersetzung vor der Kompilierung durchgeführt
<br>Kein Semikolon bei der Deklaration/Definition!
<br>GROSSSCRHEIBUNG für den Variablennamen hat sich etabliert


<br>#define ANZAH_LEVELS
//...
int numLevelsOnStart = ANZAHL_LEVELS;
ANZAHL_LEVELS = 11; // Geht nicht!
Copy<br>
<br>Mansche Konstanten sind durch die Standardbibliothek und teils durch weitere APIs und SDK bereits definiert.
<br><br>
<br>Ab C++ 20 gibt es aktualisierte Versionen der üblichen Konstanten per constexpr.
<br>Dazu muss man ggf. die C++ Version ändern: Rechts-Klick auf Projekt im Projektmappen Explorer  Eigenschaften  Unter Allgemein findet man die C++ Version
<br>Konstante Ausdrücke mit constexpr wird Teil von Programmieren 2
<br><br>
<br>Ganzzahlige Konstanten sind i.d.R. vom Typ int.

<br>Der Datentyp der Konstanten kann sich mit der Schreibweise der Konstanten festgelegt werden, z.B.

<br>12UL oder 12ul vom Typ unsigned long
<br>Analog: 19l, 19L (long) bzw. 19U, 19u (unsigned int)




<br>Dezimale Konstante:

<br>beginnt mit einer von 0 verschiedenen Zahl,
<br>z.B. 120 oder 89234


<br>Oktale Konstante:

<br>beginnt mit einer führenden 0,
<br>z.B. 071, 01234567


<br>Hexadezimale Konstante:

<br>beginnt mit einem 0x oder 0X,
<br>Buchstaben können klein oder groß geschrieben werden,
<br>z.B. 0xa131 oder 0XABC1


<br><br>
<br>Folge von Buchstaben, Ziffer oder Unterstrichen. 
<br>Umlaute und Buchstabe ß sind nicht zulässig bzw. werden teils vom Compiler akzeptiert (ist aber nicht zu empfehlen) 
<br>Unterscheidung von Groß- und Kleinbuchstaben 
<br>Erstes Zeichen muss Buchstabe oder Unterstrich sein (Zahl ist ungültig) 
<br>Name kann beliebige Länge haben 
<br>Schlüsselwörter (reservierte Wörter der Sprache wie z.B. Typbezeichner) sind nicht zulässig.
<br><br>
<br>Ziel: Eindeutig, für andere gut lesbar, ggf. in englisch (Wiederverwendbarkeit, Zusammenarbeit in internationalem Entwicklerteam) 
<br>Bei Teamprojekten: Anfangs festgelegte Programming Guidelines erleichtern die Zusammenarbeit und Lesbarkeit regeln 

<br>das Format der Namensgebung und 
<br>bestimmte Formatierungen des Codes 
<br>Kommentarregeln (für Dokumentation) 


<br>Bestimmte Namen werden üblicherweise für bestimmte Zwecke am besten nur in lokalen Codebereichen (innerhalb einer Funktion, einer Schleife, etc. ) genutzt 

<br>i oder j für Schleifenindizies 
<br>r,g,b,a für Farben und Transparenz 
<br>x,y,z für 3D-Koordinaten 
<br>Fehlerquelle: Gefahr das lokale Variablen namensgleiche Variablen überschreiben, die einen größeren Einflussbereich haben  Besser sind eindeutigere Namen


<br><br>
<br>Die Ungarische Notation ist eine bekannte Namenskonvention von Charles Simonyi. Ursprung bei der Entwicklung von Microsoft Office. Es gibt zwei Strömungen/Schulen

<br>Apps Hungarian: Namensgebung bezieht sich hauptsächlich auf die Semantik der Variable: Welche Aufgabe hat die Variable in welchem Kontext. 
<br>Systems Hungarian: Nimmt primär den Datentyp und die Sichtbarkeit auf. 


<br>Apps Hungarian  {Präfix} {Datentyp} {Bezeichner} 

<br>Beispiele für Präfix 

<br>K für Konstante Variable 
<br>I für Index-Variable für den Zugriff auf eine Liste (Array) 
<br>Rg für Range = Array 
<br>C für Count = Anzahl der Elemente in einem Array 


<br>Beispiele für Datentyp 

<br>D (double), l (long), fl (file), … 


<br>Bezeichner 

<br>Gut lesbar, soll Aufgabe Beschreiben, ggf. weglassen, nur erste Buchstabe groß, keine Unterstriche




<br>Systems Hungarian  {Präfix} {Bezeichner} 

<br>Präfix bezeichnet den Datentyp, ggf. mit einem Zusatz für die Sichtbarkeit 
<br>Bezeichner: frei wählbar


<br><br>Quote
“Requiring techniques like Hungarian notation to encode a type has been used in untyped languages, but is generally unnecessary and actively harmful in a strongly statically-typed language like C++” ~C++ Core Guidelines (isocpp.github.io)
<br><br>
<br>Wertebereich &amp; Speicherverbrauch [n...m]

<br>ausreichend groß, z.B. Tageszeit in Stunden vs. in Millisekunden
<br>Ist das Vorzeichen der Werte relevant?


<br>Wert mit Typ darstellbar?

<br>Ganze Zahlen z.B. Lebenspunkte
<br>Kommazahlen z.B. Geschwindigkeit

<br>Wie viele Nachkommastellen müssen berücksichtigts werden können, damit meine Berechnungen ausreichend genau sind?

<br>Sehr genau: Softbody Physik
<br>Hinreichend genau: Position eines NPCs






]]></description><link>repository\elementare-datentypen.html</link><guid isPermaLink="false">repository/Elementare Datentypen.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Folgen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br>Eine Folge ist eine eindeutige Zuordnung , wobei <br><br>(Kapital bei Zinssatz, Population, Abschreibungen,...)<br><br><br>
<br>Explizit: , z.B. 
<br>Rekursiv: , z.B. 
<br><br><br><br><br>, <br><br>Strebt einem Grenzwert zu: <br><br>Hat keinen Grenzwert<br><br> (konstant)   <br><br><br>
<br>
<br>
<br>
<br>
]]></description><link>repository\folgen.html</link><guid isPermaLink="false">repository/Folgen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:07 GMT</pubDate></item><item><title><![CDATA[Funktionen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br>Funktion  = Zuordnungsvorschrift die jedem  genau ein  zuordnet.<br><br>Y axisX axisExpression 1<br>
Y axisX axisExpression 1<br>
Y axisX axisExpression 1<br>
Y axisX axisExpression 1<br>
Y axisX axisExpression 1<br><br>
<br>Y axisX axisExpression 1Expression 2<br>Funktionen mehrerer Variablen <br>
<br>Definition:<br>
Eine Funktion  hat eine Umkehrfunktion  wenn jedem  genau ein  zugeordnet wird.<br>
<br>
Der Graph der Umkehrfunktion entsteht durch Spiegelung des Graphen an der Winkelhalbierenden (,  Quadrant)<br>
Y axisX axisExpression 1Expression 2Expression 3Expression 4<br><br><br><br>
<br>nach rechts: 
<br>nach links: 
<br>nach oben: 
<br>nach unten: 
<br><br><br>
<br>x-Richtung: 
<br>y-Richtung: 
<br>Bezeichnungen
: Streckung<br>
: Stauchung<br>
: Streckung und Spiegelung<br>
: Stauchung und Spiegelung
<br><br><br>
<br>x-Achse: 
<br>y-Achse: 
<br>am Ursprung: 
<br>an :  (Umkehrfunktion) 
<br><br><br><br><br><br><br>
<br>: steigt nach rechts
<br>: fällt nach rechts
<br>: parallel zur x-Achse
<br>: parallel zur y-Achse (x = a, keine Funktion)
<br>Y axisX axisExpression 1y₁y₂x₁x₂Expression 6Expression 7y₂-y₁x₂-x₁ααy₁y₁y₂y₂x₁x₁x₂x₂y₂-y₁y₂-y₁x₂-x₁x₂-x₁αααα<br><br> (Normalform)<br>
 (Scheitelform)<br>Umformung von Normalform zu Scheitelpunktform:<br>
<br>
<br>
<br>Bei 2 Nullstellen: <br>Parabel symmetrisch bzgl. Scheitel<br>
Y axisX axisExpression 1Expression 2Expression 3Expression 4<br><br><br>Y axisX axisExpression 1Expression 2<br>
<br>
<br>
<br>
<br><br><br><br><br><br>
Y axisX axisExpression 1a=2na=2na=2n<br>
Y axisX axisExpression 1a=2n+1a=2n+1a=2n+1<br>
Y axisX axisExpression 1a=-2na=-2na=-2n<br>
Y axisX axisExpression 1a=-2n+1a=-2n+1a=-2n+1<br>
Y axisX axisExpression 1α ∈ ℝ₊ ̸ ℕα ∈ ℝ₊ ̸ ℕα ∈ ℝ₊ ̸ ℕ<br>
Y axisX axisExpression 1α ∈ ℝ₋ ̸ ℤα ∈ ℝ₋ ̸ ℤα ∈ ℝ₋ ̸ ℤ<br><br><br>
Steigt stärker an als jede Potenz von .<br>
Anwendungen: Wachstum, Zerfall<br>
Y axisX axisExpression 1a&gt;1Expression 30&lt;a&lt;1a&gt;1a&gt;10&lt;a&lt;10&lt;a&lt;1<br>
<br>
Y axisX axisExpression 1a&gt;1Expression 30&lt;a&lt;1a&gt;1a&gt;10&lt;a&lt;10&lt;a&lt;1<br><br><br>
Es können Polstellen (-Stellen) oder Definitionslücken ( Löcher) auftreten.<br>Polstellen:<br>
 oder<br>
<br>
: Vielfachheit der Nullstelle<br>Definitionslücke:<br>
 )$<br>Beispiel: <br>
Y axisX axisExpression 1Expression 2Expression 3Expression 4<br>
<br>]]></description><link>repository\funktionen.html</link><guid isPermaLink="false">repository/Funktionen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:09 GMT</pubDate></item><item><title><![CDATA[Gaußalgorithmus]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
( Gleichungen für  Unbekannte, siehe <a data-href="Lineare Gleichungssysteme" href="\repository\lineare-gleichungssysteme.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Lineare Gleichungssysteme</a>)<br><br>
<br>Multiplikation ()
<br>Addition / Subtraktion
<br>Vertauschung von Zeilen
<br>Streichen redundanter Zeilen
<br><br><br><br><br><br>
<br>
<br> Gerade in <br>
z.B. ]]></description><link>repository\gaußalgorithmus.html</link><guid isPermaLink="false">repository/Gaußalgorithmus.md</guid><pubDate>Thu, 24 Oct 2024 16:31:09 GMT</pubDate></item><item><title><![CDATA[Geschichte der Informatik]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Einführung-Informatik" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Einführung-Informatik</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Einführung-Informatik" class="tag" target="_blank" rel="noopener nofollow">#Einführung-Informatik</a> <br>Ursprung der Informatik
"Die Wurzeln der Entwicklung der Informatik liegen im Bestreben der Menschen, nicht nur körperliche Arbeit durch den Einsatz von Werkzeugen und Maschinen zu erleichtern, sondern auch geistige Tätigkeiten."<br>
~ H. Ernst, Grundkurs Informatik, S.3
<br>Die wichtigsten Schritte der Entwicklung der Maschinen bis zum Computer:<br>
<br>Schritt: Konstruktion von Rechenhilfen und mechanischen Rechenmaschinen (2000 - 100v Chr.)
<br>Schritt. Bau digitaler mechanischer Rechenmaschinen (17. Jhdt.)
<br>Schritt: Elektrische Rechenmaschinen (vor 1945)
<br>Schritt: Elektronische Rechenmaschinen (nach 1945) 
<br><br>
<br>Schritt: Mechanische Rechenhilfen
<br>
<br>Abakus (ca. 2000 v. Chr.)

<br>Zählwerk aus beweglichen Kugeln
<br>Erlaubt Rechnern mit vier Grundrechenarten


<br>Mechanismus von Antikythera (ca. 100 v. Chr.)

<br>Urwerks-ähnlicher Mechanismus mit Zahnrädern
<br>erlaubt astronomische Berechnungen


<br>Napier'sche Rechenstäbchen (um 1617)

<br>Stächen mit quadratischem Querschnitt
<br>in jeder Zeile des Stäbchens steht eine Zahl des Einmaleins
<br>erleichtert Multiplikation und Division
<br>verwendet um Geld einzutreiben


<br><br>
<br>Schritt: Mechanische Rechenmaschinen mit Zahnrädern zur Ausführung arithmetischer Operationen
<br>
<br>Rechenmaschine von Schickard (um 1624)
<br>Mechanische Rechenmaschinen von Pascal (ab ca. 1640) und Leibniz (ab 1673)<br>
Konzeption der ersten Rechenmaschine nach heutigem Muster durch Babbage (ab 1833):
<br>logische Trennung verschiedener Funktionseinheiten (Rechenwerk, Steuerwerk, Speicher, Ein-/Ausgabemöglichkeit)
<br>Steuerung durch "Programme" auf Lochkarten
<br>50 x 100 Register zum Speichern von 40-stellugen Zahlenallerdings: nur Pläne , nie gebaut<br>
Analytical Engine ist der erste Mechanische Computer
<br><br>
<br>Schritt: Elektrische Rechenmaschinen verwendeten Relais oder Elektronenröhren statt Zahnrädern.

<br>erste voll funktionsfähige elektromechanische Rechenanlagen durch Zuse (Z3, 1941) und Aiken (MARK1, 1944)

<br>Relais als Basis
<br>Berechnung von Flugbahnen, Navigationsdaten, Statistiken


<br>erste mit Elektronenröhren arbeitende Rechenanlage durch Eckert/Mauchly (ENIAC, 1946)

<br>noch ziemlich unhandlich: 140  Grundfläche, 174 kW Leistungsaufnahme, 18000 Elektronenröhren, ...
<br>Berechnung von ballistischen Datenrepräsentation




<br>Schritt: Einsatz von Elektronik und starke Miniaturisierung der Hardware

<br>Einsatz von Transistoren anstelle von Röhren (ab 1955)
<br>Einsatz von integrierten Schaltkreisen anstelle von Transistoren (ab 1960)
<br>Einsatz von hochintegrierter Schaltkreise (seit Anfang der 70er Jahre)
<br>Abkehr von vorherrschender von-Neumann-Architektur (seit Mitte der 80er Jahre)


<br>Zukunft<br>
<br>Molekulare Computer (ab 2050?)
<br>Quanten-Computer (ab ???)
<br><br>
<br>Problem-orientierte Programmiersprachen (seit Ende der 50er Jahre)
<br>Betriebssysteme (seit Anfang der 60er Jahre)
<br>Software Engineering (Ende der 60er Jahre)
<br>Objektorientierte Ansätze innerhalb des Software Engineering (sei Anfang der 80er Jahre)
<br>Internet, verteilte Programme (seit Anfang der 80er Jahre)
<br>Zukunft<br>
<br>Cloud Computing
<br>Pervasive Computing
<br><br>Ausstattung eines PCs 1979:<br>
<br>Prozessor: Intel 8088
<br>1 Kern
<br>Taktfrequenz: 4,7 MHz
<br>Hauptspeicher: 64 KB
<br>Plattenspeicher: n.v.
<br>externer Speicher: 5,25' Floppy 360 KB
<br>Bildschirm: 12 Zoll monochrom
<br>Transistoren in CPU: 29.000<br>
Ausstattung eines PCs 2024
<br>Prozessor: Intel Core i9-14900KS
<br>24 Kerne (8x Leistung, 16x Effizienz)
<br>Taktfrequenz: bis zu 6,0 GHz
<br>Hauptspeicher bis zu 64GB
<br>Plattenspeicher: 2000 GB
<br>externer Speicher: USB-Sticks
<br>Bildschirm: 25 Zoll TFT
<br>Transistoren in CPU: &gt; 6.000.000.000 (?) (mit integrierter GPU)
<br>Moores Law
Die Anzahl der Transistoren auf Chips verdoppelt sich alle 2 Jahre
]]></description><link>repository\geschichte-der-informatik.html</link><guid isPermaLink="false">repository/Geschichte der Informatik.md</guid><pubDate>Thu, 24 Oct 2024 16:31:10 GMT</pubDate></item><item><title><![CDATA[Höhere Ableitungen - Geometrische Anwendung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<br>
<br>
<br>
<br>
<br> = Steigung einer Funktion <br>
 : Funktion (streng) monoton steigend<br>
 : Funktion (streng) monoton fallend<br>
 von  bei <br>
Extremum <br> Krümmung / Steigung der Steigung<br>
 : Links-Krümmung<br>
 : Rechts-Krümmung<br>
 von  bei  Wendepunkt<br>
Sattelpunkt: Wendepunkt mit waagerechter Tangente<br>
 von <br>Taylorreihe (Taylor)<br>Satz von Taylor
Jede beliebig oft differenzierbare Funktion f(x) lässt sich in eine Potenzreihe entwickeln
<br><br>
<br>
<br>
<br>
<br>Taylorreihe

<br><br><br><br><br><br><br><br><br><br>
<br>
<br>
<br>Eulerische Formel

]]></description><link>repository\höhere-ableitungen-geometrische-anwendung.html</link><guid isPermaLink="false">repository/Höhere Ableitungen - Geometrische Anwendung.md</guid><pubDate>Thu, 24 Oct 2024 16:31:10 GMT</pubDate></item><item><title><![CDATA[Hyperbolische Funktionen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<br>
<br>
<br>
<br>
]]></description><link>repository\hyperbolische-funktionen.html</link><guid isPermaLink="false">repository/Hyperbolische Funktionen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:11 GMT</pubDate></item><item><title><![CDATA[Information, Informationsdarstellung und -Verarbeitung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Einführung-Informatik" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Einführung-Informatik</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Einführung-Informatik" class="tag" target="_blank" rel="noopener nofollow">#Einführung-Informatik</a> <br><br>...ist als Begriff&nbsp;nicht&nbsp;exakt definierbar.<br>Mögliche Definitionen
"Information ist die Kenntnis über bestimmte Sachverhalte und Vorgänge un einem Teil der wahrgenommenen Realität"
"Information ist eine Mitteilung, die sich aus einer räumlichen oder zeitlichen Folge physikalischer Signale zusammengesetzt, die mit bestimmten Wahrscheinlichkeiten auftreten und die beim Empfänger ein bestimmtes [Denk]verhalten bewirkt" ~Duden
<br> ...ist immateriell (d.h. nicht physikalisch greifbar)<br>
 ...kann nur über Umweg "Daten" im Rechner verarbeitet werden. <br><br>
<br>sind als Begriff exakt definierbar
Definition
Daten sind Zeichen oder kontinuierliche Funktionen, die Informationen aufgrund bekannter oder unterstellter Abmachungen zum Zweck der Verarbeitung darstellen (DIN 44300)


<br>besitzen physikalische Repräsentation
<br><br>
<br>Daten sind die physikalischen Repräsentation von Information
<br>Information erhält man, wenn man die Daten "versteht"
<br><br>Definition
Eine Nachricht lässt sich als Folge von Zeichen auffassen, die von einem Sender (Quelle) ausgehend, in irgendeiner Form einem Empfänger (Senke) übermittelt wird.
<br><br>
<br>Nachrichten sind Daten, die übermittelt werden
<br><br> Informationsverarbeitung<br><br><br>
<br>
Repräsentation von Information durch physikalisch messbare Entität, z.B.

<br>elektrische Ladung
<br>elektrische Spannung
<br>Magnetisierung
<br>optische Reflexion


<br>
Unterscheidung von zwei Zuständen, z.B.<br>
- Kondensator geladen oder entladen<br>
- an Widerstand liegt Spannung von 5 V an oder nicht<br>
- Stelle auf Magnetscheibe magnetisiert oder nicht<br>
- Stelle auf optischer Platte reflektiert Lichtstrahl oder nicht<br>
 Identifikation der Zustände mit den Symbolen  bzw. <br>
 Informationsgehalt:  Bit

<br>
Komplexere Nachrichten bzw. umfangreichere Informationsgehate entsprechen Folgen aus  und 

<br>Zahlen und Zeichen so darstellbar
<br>Teilfolgen von je 8 Nullen oder Einsen ergeben  Byte (ABk.: B)


<br>
Größenfaktoren

<br>K =  =  (Kilo)
<br>M =  =  (Mega)
<br>G =  =  (Giga)
<br>T =  =  (Tera)
<br>P =  =  (Peta)
<br>E =  =  (Exa)


<br>
Zur Unterscheidung zwischen binären und dezimalen Größenfaktoren wird meist ein  eingefügt:  vs. <br>
<img alt="AbweichungBinärDezimalGroessenfaktoren.png" src="\repository\attachments\abweichungbinärdezimalgroessenfaktoren.png" style="width: 450px; max-width: 100%;">

<br><br>Die Festlegung einer Abbildungsvorschrift zwischen bestimmter Art von Information und bestimmten Mustern aus Nullen und Einsen wird (Binär-)Codierung genannt<br>Gewünschte Eigenschaften von Codes sind:<br>
<br>Kompakte Darstellung: Es sollten möglichst wenig Bits benötigt werden.
<br>Redundanz: Der Code sollte robust bei Übertragungsfehlern sein.
<br>Handlichkeit: Der Code sollte eine leichte Verarbeitung der Daten im Rechner ermöglichen.<br>
 alle Anforderungen können nicht gleichzeitig erfüllt werden<br>
 je nach Anwendungszweck werden unterschiedliche Codes bevorzugt<br>
Frage: Wie viele Bits brauche ich eigentlich mindestens?
<br><br>Informationsgehalt (oder Entscheidungsinformation)  eines Zeichens  (in bit):<br><br>
<br> ist die Auftretenswahrscheinlichkeit des Zeichens 
<br> entspricht minimaler Anzahl von 0/1-Entscheidungen
<br>Entropie (oder mittlerer Informationsgehalt) H:

<br><br>L=\sum^{n}{i=1} \omega (x{i}) \cdot l(i)<br><br>n=\sum^{N}{i=0}b{i} \cdot B^{i} \equiv (b{N}b{N-1}\dots b{2}b{1}b{0}){B}<br><br>n=(\dots(b{N} \cdot B * b{N-1}) \cdot B + b{n-2}) \cdot B + \dots + b{1}) \cdot B + b_{0}<br><br>\begin{align}<br>
n : B &amp;= q0 \quad \text{ Rest } b_0 \<br>
q_0 : B &amp;= q_1 \quad \text{ Rest } b_1 \<br>
&amp;\vdots \<br>
q{N-2} : B &amp;= q{N-1} \quad \text{ Rest } b{N-1} \<br>
q_{N-1} : B &amp;= 0 \quad \text{ Rest } b_N<br>
\end{align}<br><br>\begin{align}<br>
q{N-2} &amp;= b_N \cdot B + b{N-1} \<br>
q{N-1} &amp;= q{N-2} \cdot B + b_{N-2} \<br>
&amp;\vdots \<br>
q_0 &amp;= q_1 \cdot B + b_1 \<br>
n &amp;= q_0 \cdot B + b_0<br>
\end{align}<br><br>\displaylines{<br>
\dots\underbrace{ a{7} }{ -2^7 }\underbrace{ a{6} }{ 2^6 }\underbrace{ a{5} }{ 2^5 }\underbrace{ a{4} }{ 2^4 }\underbrace{ a{3} }{ 2^3 }\underbrace{ a{2} }{ 2^2 }\underbrace{ a{1} }{ 2^1 }\underbrace{ a{0} }{ 2^0 }<br>
\ \<br>
\begin{align}<br>
0 \ = \ 0000~0000  &amp;  &amp; 0000~0000 \ = \ +0\<br>
1 \ = \ 0000~0001  &amp;  &amp; 0000~0001 \ = \ +1\<br>
\vdots  &amp;  &amp; \vdots \<br>
128 \ = \ 1000~0000  &amp;  &amp; 0111~1111 \ = \ +127\<br>
\vdots  &amp;  &amp; 1000~0000 \ = \ -128\<br>
255 \ = \ 1111~1111 &amp;  &amp; 1111~1111 \ = \ -1<br>
\end{align}<br>
}<br><br>\begin{align}<br>
~0010~1011  &amp; &amp; \rightarrow &amp; \quad 43 \<br>
+1111~1111  &amp; &amp; \rightarrow &amp; \quad +(-1)\<br>
\overline{1\ \ \ 1111\ 111\ \ } \<br>
(1)\ 0010~1010   &amp; &amp; \rightarrow &amp; \quad 42<br>
\end{align}<br><br>\displaylines{<br>
\text{Zweierkomplement: }-n = \overline{n}+1 \<br>
\text{Einerkomplement: }\overline{n} = \forall \ a \in n\begin{cases}<br>
1 &amp; \text{falls} &amp; a = 0 \<br>
0 &amp; \text{sonst}<br>
\end{cases}<br>
}<br><br>\begin{align}<br>
0001~0111 &amp; \quad &amp; \rightarrow &amp; \quad 23 \<br>
\Downarrow \<br>
\color{#999}1110~1000 &amp; \color{#999}+1 &amp; \color{#999}\rightarrow &amp; \color{#999}\quad -24+1 \<br>
1110~1001 &amp; \quad &amp; \rightarrow &amp; \quad -23<br>
\end{align}<br>]]></description><link>repository\information,-informationsdarstellung-und-verarbeitung.html</link><guid isPermaLink="false">repository/Information, Informationsdarstellung und -Verarbeitung.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate><enclosure url="repository\attachments\abweichungbinärdezimalgroessenfaktoren.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\abweichungbinärdezimalgroessenfaktoren.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Integralrechnung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br>geg.:    ges.:wobei:<br>
Definition:<br>
<br>differenzieren = Berechnung der 1. <a data-tooltip-position="top" aria-label="Differenzialrechnung" data-href="Differenzialrechnung" href="\repository\differenzialrechnung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Ableitung|</a>:
<br>integrieren =  Berechnung der Stammfunktion
<br>    Stammfunktion eindeutig bis auf additive Konstante<br><br>
Y axisX axisExpression 2Expression 3<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br>
<br>
Y axisX axisExpression 1Expression 2<br><br><br><br><br><br>-<br>
-<br>
-<br>
-<br>Tipp
Beweis der Integrationsregeln und der Liste durch Ableiten!
<br><br><br><br>Merke
<br>

<br>Bsp.:<br>
<br>
Bsp.:<br>
<br>
<br>
<br><br><br>
<br>
Bsp.:<br><br><br>
<br>
<br><br><br>
<br>
<br>Bsp.:<br>
<br>
<br><br>viele (!) z.B. Partialbruchzerlegung für<br>
Hinweis: Viele Integrale sind nicht durch elementare Funktionen ausdrückbar<br>
Man kann sie nur numerisch berechnen oder führt neue "spezielle Funktionen" ein<br>z.B.:<br>
(Errorfunktion)<br>
(Integralsinus)<br><br><br><br>
(Riemann-Integral)<br>
beliebige Zerlegung<br>
: Zwischenwert<br><br><br>Für :<br>
<br> Integralfunktion: bestimmtes Integral mit variabler Obergrenze.<br><br>
Integralfunktion = Stammfunktion bis auf Konstante!<br>
]]></description><link>repository\integralrechnung.html</link><guid isPermaLink="false">repository/Integralrechnung.md</guid><pubDate>Thu, 24 Oct 2024 16:31:13 GMT</pubDate></item><item><title><![CDATA[IT-Systeme - Übungsblatt 1]]></title><description><![CDATA[<a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> <a class="tag" href="?query=tag:IT-Systeme" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IT-Systeme</a> 
 <br><a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a> <a href=".?query=tag:IT-Systeme" class="tag" target="_blank" rel="noopener nofollow">#IT-Systeme</a> <br><br><br>0 GOTO 0
Copy<br><br>0 R0 &lt;- x
1 R1 &lt;- 1
2 IF R0 = 0 GOTO 5
3 R1 &lt;- R1 + R1
4 GOTO 2
5 STOP
Copy<br><br> 0 R0 &lt;- 26             // x
 1 R1 &lt;- 1              // const 1
 2 R2 &lt;- 0              // n
 3 R3 &lt;- 0              // n^2
 4 R4 &lt;- R3 - R0        // --&gt; see next
 5 IF R4 &gt; 0 GOTO 11    // check if n^2 &gt; x
 6 R3 &lt;- R3 + R2        // ... (n+1)^2 = n^2 + 2n+1
 7 R3 &lt;- R3 + R2        // ... calc (n+1)^2
 8 R3 &lt;- R3 + R1        // ... calc (n+1)^2
 9 R2 &lt;- R2 + R1        // increment n
10 GOTO 4               // restart and calc (n+1)^2 
11 R2 &lt;- R2 - R1        // n - 1 = int(sqrt(x))
12 STOP
Copy<br><br>// 1000: Multiplication Function 1 (Part of Power Function)
// R1000 &lt;- R1001 * R1002
1000 R1000 &lt;- 0
1001 R1003 &lt;- 1 // const 1
1002 IF R1002 = 0 GOTO 1106
1003 R1000 &lt;- R1000 + R1001
1004 R1002 &lt;- R1002 - R1003
1005 GOTO 1002

// 1101: Power Function
// R1100 &lt;- R1101 ^ R1102
1100 R1100 &lt;- 1
1101 R1103 &lt;- 1 // const 1
1102 IF R1102 = 0 GOTO 7
1103 R1001 &lt;- R1100 // call 'Multiplication Function 1'
1104 R1002 &lt;- R1101
1105 GOTO 1000
1106 R1100 &lt;- R1000
1107 R1102 &lt;- R1102 - R1103
1108 GOTO 1102

// 1200: Multiplication Function 2 (Part of Main Code)
// R1200 &lt;- R1201 * R1202
1200 R1200 &lt;- 0
1201 R1203 &lt;- 1 // const 1
1202 IF R1202 = 0 GOTO 10
1203 R1200 &lt;- R1200 + R1201
1204 R1202 &lt;- R1202 - R1203
1205 GOTO 1202

// - R0 &lt;- length of number (pointer start pos i+1)
// - R1...R10 &lt;- number in reverse
   0 R17 &lt;- 1 // const 1
   1 R16 &lt;- 0 // sum (result)
   2 IF R0 = 0 GOTO 13 // do 4...12 until i=0
   3 R18 &lt;- R0 - R17 // i &lt;- R0 - 1
   4 R1101 &lt;- 10 // set base to 10 (decimal system)
   5 R1102 &lt;- R18 // set exponent to i
   6 GOTO 1100 // call 'Power Function'
   7 R1201 &lt;- R1100 // set factor 1 to (10^i)
   8 R1202 &lt;- RR0 // set factor 2 to (a_(i+1))
   9 GOTO 1200 // call 'Multiplication Function 2'
  10 R16 &lt;- R16 + R1200 // add product to sum
  11 R0 &lt;- R0 - R17 // R0 -= 1
  12 GOTO 2
  13 STOP
Copy]]></description><link>repository\it-systeme-übungsblatt-1.html</link><guid isPermaLink="false">repository/IT-Systeme - Übungsblatt 1.md</guid><pubDate>Thu, 24 Oct 2024 16:31:13 GMT</pubDate></item><item><title><![CDATA[IT-Systeme Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> <a class="tag" href="?query=tag:IT-Systeme" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IT-Systeme</a> 
 <br><a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a> <a href=".?query=tag:IT-Systeme" class="tag" target="_blank" rel="noopener nofollow">#IT-Systeme</a><br>Moodle-Passwort: karl<br>
<br>Wie funktionieren die Systeme mit denen man arbeitet?
<br>Hauptsächlich Softwareseite (wie funktioniert sie, wie programmiert man sie?)
<br>Auch grundlegendes Hardware-Wissen nötig
<br><br>
<br><a data-href="Abstraktionsebenen" href="\repository\abstraktionsebenen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiMonitorSpeaker" aria-label="LiMonitorSpeaker" data-icon="LiMonitorSpeaker" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-monitor-speaker"><path d="M5.5 20H8"></path><path d="M17 9h.01"></path><rect x="12" y="4" width="10" height="16" rx="2"></rect><path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"></path><circle cx="17" cy="15" r="1"></circle></svg></span>Abstraktionsebenen</a>
<br><a data-tooltip-position="top" aria-label="Random Access Maschinen (RAM)s" data-href="Random Access Maschinen (RAM)s" href="\repository\random-access-maschinen-(ram)s.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiMonitorSpeaker" aria-label="LiMonitorSpeaker" data-icon="LiMonitorSpeaker" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-monitor-speaker"><path d="M5.5 20H8"></path><path d="M17 9h.01"></path><rect x="12" y="4" width="10" height="16" rx="2"></rect><path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"></path><circle cx="17" cy="15" r="1"></circle></svg></span>Random Access Maschinen</a>
<br><a data-href="Zahlendarstellungen" href="\repository\zahlendarstellungen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiMonitorSpeaker" aria-label="LiMonitorSpeaker" data-icon="LiMonitorSpeaker" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-monitor-speaker"><path d="M5.5 20H8"></path><path d="M17 9h.01"></path><rect x="12" y="4" width="10" height="16" rx="2"></rect><path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"></path><circle cx="17" cy="15" r="1"></circle></svg></span>Zahlendarstellungen</a>
<br>Boolesche Funktionen
<br>Logische Schaltkreise
<br>Rechnerarchitekturen
<br>Assembler-Programmierung
<br>Peripherie
<br><br>
<br><a data-href="IT-Systeme - Übungsblatt 1" href="\repository\it-systeme-übungsblatt-1.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiMonitorSpeaker" aria-label="LiMonitorSpeaker" data-icon="LiMonitorSpeaker" aria-hidden="true" style="color: rgb(240, 189, 117); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-monitor-speaker"><path d="M5.5 20H8"></path><path d="M17 9h.01"></path><rect x="12" y="4" width="10" height="16" rx="2"></rect><path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"></path><circle cx="17" cy="15" r="1"></circle></svg></span>IT-Systeme - Übungsblatt 1</a>
]]></description><link>repository\it-systeme-orga.html</link><guid isPermaLink="false">repository/IT-Systeme Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Kompilierte vs. Interpretierte Sprachen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br>
<br>werden in die sog. native Sprache (Maschinensprache) des Zielsystems mithilfe des sog. Compilers übersetzt.
<br>Die Maschinensprache ist für den Menschen nur schwer lesbar, liegt als Folge von Bytes vor, die für Daten und Befehle stehen und in einer Binärdatei abgespeichert sind.
<br>Sind i.d.R. sehr schnell ausführbare Programme.
<br>müssen i.d.R. für jedes Zielsystem und bei jeder Codeänderung neu kompiliert (übersetzt) werden.
<br><br>
<br>werden von einem anderen Programm, dem sog. Interpreter, nach und nach „on-the-fly“ gelesen und ausgeführt.
<br>sind besser portierbar (übertragbar) auf andere Systeme, soweit ein entsprechender Interpreter für diese Systeme existiert.
<br>Führen zu wesentlich langsamerer Ausführung des Programms als bei kompilierte Sprachen.
<br><br>
<br>sind eine Kombination aus den beiden oberen Sprachtypen und versuchen deren Vor- und Nachteile auszugleichen.
<br>Code wird zum Zeitpunkt des Bedarfs kompiliert.
]]></description><link>repository\kompilierte-vs.-interpretierte-sprachen.html</link><guid isPermaLink="false">repository/Kompilierte vs. Interpretierte Sprachen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:14 GMT</pubDate></item><item><title><![CDATA[Lineare Algebra und analytische Geometrie Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> <a class="tag" href="?query=tag:Lineare-Algebra-und-analytische-Geometrie" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Lineare-Algebra-und-analytische-Geometrie</a> 
 <br><a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a> <a href=".?query=tag:Lineare-Algebra-und-analytische-Geometrie" class="tag" target="_blank" rel="noopener nofollow">#Lineare-Algebra-und-analytische-Geometrie</a><br>Moodle-Passwort: internGE<br><br>
<br><a data-href="(Naive) Mengenlehre" href="\repository\(naive)-mengenlehre.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiPlusSquare" aria-label="LiPlusSquare" data-icon="LiPlusSquare" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-plus-square"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M8 12h8"></path><path d="M12 8v8"></path></svg></span>(Naive) Mengenlehre</a>
<br>Vektoren
<br>Basen, Unterräume, Gerade
<br>Messen in Vektorräumen
<br>Matrizen
<br>Lineare Gleichungssysteme
<br>Determinanten, Eigenwerte, Eigenvektoren
]]></description><link>repository\lineare-algebra-und-analytische-geometrie-orga.html</link><guid isPermaLink="false">repository/Lineare Algebra und analytische Geometrie Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Lineare Gleichungssysteme]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br><br>()  | <br>
()  | <br>() <br>
 () <br><br>
<br>
<br>()  | <br>
()  | <br>() <br>
() <br><br>
<br>Cramersche Regel

<br><br>
<br>
<br>
<br><br><br><br>
<br>
<br><br>
<br><br>Regel von Sarrus
<img alt="Regel von Sarrus Matrix.png" src="\repository\attachments\regel-von-sarrus-matrix.png"><br>
<br>
 
<br><br>
<br><br><img alt="Vierer Matrix Aufteiling Dreier Matrizen.png" src="\repository\attachments\vierer-matrix-aufteiling-dreier-matrizen.png"><br>
<br>
]]></description><link>repository\lineare-gleichungssysteme.html</link><guid isPermaLink="false">repository/Lineare Gleichungssysteme.md</guid><pubDate>Thu, 24 Oct 2024 16:31:15 GMT</pubDate><enclosure url="repository\attachments\regel-von-sarrus-matrix.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\regel-von-sarrus-matrix.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Logarithmen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
, , <br>
<br>
Potenz: Lösung der Exponentialgleichung <br>
Schreibweise: Die Lösung heißt <br>
Logarithmus: Lösung einer Exponentialgleichung<br><br> <br>
<br>
<br>
<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br> (Logarithmus zur Basis 10, auch dekadischer Logarithmus genannt)<br>
 (Natürlicher Logarithmus zur Basis )<br>
 (Logarithmus zur Basis 2, auch binärer Logarithmus genannt)<br>
Dabei gilt:<br>
<br>
<br>
<br>
<br><br>]]></description><link>repository\logarithmen.html</link><guid isPermaLink="false">repository/Logarithmen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:15 GMT</pubDate></item><item><title><![CDATA[Mathe-Vorkurs Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> <a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> 
 <br><a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a><br>
<br>12 Tage beginnend 11.09.2024 endend am 26.09.2024
<br>Mathe Grundwissen Wiederholung
<br><br>
<br>SK110 S859 E5
<br>SK110 W469
<br>QP890 125
<br><br>
<br><a data-href="Binomischer Lehrsatz" href="\repository\binomischer-lehrsatz.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Binomischer Lehrsatz</a>
<br><a data-href="Binomialkoeffizient" href="\repository\binomialkoeffizient.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Binomialkoeffizient</a>
<br><a data-href="Potenzen und Wurzeln" href="\repository\potenzen-und-wurzeln.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Potenzen und Wurzeln</a>
<br><a data-href="Terme" href="\repository\terme.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Terme</a>
<br><a data-href="Betragsgleichungen" href="\repository\betragsgleichungen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Betragsgleichungen</a>
<br><a data-href="Folgen" href="\repository\folgen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Folgen</a>
<br><a data-href="Logarithmen" href="\repository\logarithmen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Logarithmen</a>
<br><a data-href="Summen und Reihen" href="\repository\summen-und-reihen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Summen und Reihen</a>
<br><a data-href="Angeblich nicht lösbare Gleichungen" href="\repository\angeblich-nicht-lösbare-gleichungen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Angeblich nicht lösbare Gleichungen</a>
<br><a data-href="Ungleichungen" href="\repository\ungleichungen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Ungleichungen</a>
<br><a data-href="Lineare Gleichungssysteme" href="\repository\lineare-gleichungssysteme.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Lineare Gleichungssysteme</a>
<br><a data-href="Gaußalgorithmus" href="\repository\gaußalgorithmus.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Gaußalgorithmus</a>
<br><a data-href="Trigonometrie" href="\repository\trigonometrie.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Trigonometrie</a>
<br><a data-href="Funktionen" href="\repository\funktionen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Funktionen</a>
<br><a data-href="Hyperbolische Funktionen" href="\repository\hyperbolische-funktionen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Hyperbolische Funktionen</a>
<br><a data-href="Differenzialrechnung" href="\repository\differenzialrechnung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Differenzialrechnung</a>
<br><a data-href="Höhere Ableitungen - Geometrische Anwendung" href="\repository\höhere-ableitungen-geometrische-anwendung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Höhere Ableitungen - Geometrische Anwendung</a>
<br><a data-href="Integralrechnung" href="\repository\integralrechnung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Integralrechnung</a>
<br><a data-href="Vektorrechnung" href="\repository\vektorrechnung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Vektorrechnung</a>
<br><br>
<br><a data-href="Termumformungen" href="\repository\termumformungen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Termumformungen</a>
<br><a data-href="Doppelbrüche" href="\repository\doppelbrüche.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Doppelbrüche</a>
<br><br>
<br><a data-href="Uebung Bruchterme Potenzen Wurzeln.jpg" href="\repository\attachments\uebung-bruchterme-potenzen-wurzeln.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Bruchterme Potenzen Wurzeln.jpg</a>
<br><a data-href="Uebung Gleichungen.jpg" href="\repository\attachments\uebung-gleichungen.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Gleichungen.jpg</a>
<br><a data-href="Uebung Lineare Gleichungssysteme.jpg" href="\repository\attachments\uebung-lineare-gleichungssysteme.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Lineare Gleichungssysteme.jpg</a>
<br><a data-href="Uebung Logarithmen Gleichungen.jpg" href="\repository\attachments\uebung-logarithmen-gleichungen.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Logarithmen Gleichungen.jpg</a>
<br><a data-href="Uebung Potenzen Wurzeln Addiere Brueche Vereinfache Brueche.jpg" href="\repository\attachments\uebung-potenzen-wurzeln-addiere-brueche-vereinfache-brueche.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Potenzen Wurzeln Addiere Brueche Vereinfache Brueche.jpg</a>
<br><a data-href="Uebung Reihen.jpg" href="\repository\attachments\uebung-reihen.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Reihen.jpg</a>
<br><a data-href="Uebung Termumformungen Ausmultiplizieren Faktorisieren.jpg" href="\repository\attachments\uebung-termumformungen-ausmultiplizieren-faktorisieren.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Termumformungen Ausmultiplizieren Faktorisieren.jpg</a>
<br><a data-href="Uebung Ungleichungen.jpg" href="\repository\attachments\uebung-ungleichungen.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Ungleichungen.jpg</a>
<br><a data-href="Uebung Trigonometrische Funktionen.jpeg" href="\repository\attachments\uebung-trigonometrische-funktionen.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Trigonometrische Funktionen.jpeg</a>
<br><a data-href="Uebung Funktionen.jpeg" href="\repository\attachments\uebung-funktionen.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Funktionen.jpeg</a>
<br><a data-href="Aufschrieb Kegelschnitte.jpeg" href="\repository\attachments\aufschrieb-kegelschnitte.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Aufschrieb Kegelschnitte.jpeg</a>
<br><a data-href="Uebung Differenzieren.jpeg" href="\repository\attachments\uebung-differenzieren.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Differenzieren.jpeg</a>
<br><a data-href="Uebung Integrieren.jpeg" href="\repository\attachments\uebung-integrieren.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Integrieren.jpeg</a>
<br><a data-href="Uebung Integralrechnungen.jpeg" href="\repository\attachments\uebung-integralrechnungen.jpeg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Integralrechnungen.jpeg</a>
]]></description><link>repository\mathe-vorkurs-orga.html</link><guid isPermaLink="false">repository/Mathe-Vorkurs Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Mathematische Grundlagen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>
Ein Polygon ist definiert durch eine Menge an Punkten

<br>
Objekte sollen verändert werden können

<br>
Verschiebung (Translation)

<br>
Skalierung

<br>
Rotation<br>
 Affine Transformation einer Punktmenge in eine andere Punktmenge<br>
 Vektoren und Matrizen

<br>
Vektornotation:

<br>Eine Größe die durch einen Betrag (magnitude) und eine Richtung (direction) im Raum definiert ist
<br>Anschauliches Beispiel: Verschiebung
<br>Grafisch dargestellt als Pfeil (entspr. mit Länge und Richtung)


<br>
komponentenform: 

<br>
Betrag (Länge): 

<br>
Bekannte Rechenregeln:

<br>Multiplikation mit einem reellen Skalar (positiv und negativ)
<br>Addition, Subtraktion von Vektoren
<br>Skalarprodukt: 
<br>Vektorprodukt: 


<br>
Matrixnotation:


<br>
Multiplikation zweier Matrizen, "Zeile mal Spalte"

<br>
Durch Matrizen können Vektoren transformiert werden


]]></description><link>repository\mathematische-grundlagen.html</link><guid isPermaLink="false">repository/Mathematische Grundlagen.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Modellierung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>Erstellung der Geometrie aller Objekte 
<br>Wie wir sehen werden gibt es verschiedene Darstellungsformen von Geometriedaten, am wichtigsten sind hier Polygon-Netze
<br>Die manuelle Erstellung (Modellierung ist die i.A. verbreitete Methoden
<br>Dennoch existieren für viele Spezialfälle Alternativen.
<br><br>
<br>Objekte einer 3D-Szene werden i.d.R. letztendlich als Polygon - Netzmodell (Mesh) dargestellt
<br>Oberfläche des Objekts besteht aus einer Menge an planaren Polygonen, die miteinander verbunden sind
<br>Ein Polygon (Face) ist eine Liste miteinander verbundener Punkte (Vertices)
<br>Ein Vertex ist ein Punkt im 
<br>Diese Darstellung kann exakt oder eine Näherung sein (vgl. Quader vs. Kugel)
<br>Im Näherungsfall entscheidet die Anzahl der Polygone über die Genauigkeit der Näherung - gleichzeitig erhöht sich jedoch auch der Aufwand (Speicherplatz, Rendering und ggf. artistseitige Erstellungszeit)
<br><br>
<br>Optische (oder auch haptische) Abtastung der Oberfläche, d.h. der Entfernung von Punkten der Oberfläche zur "Kamera"
<br>Für ausrechende Genauigkeit sind oft viele Scans von verschiedenen Perspektiven nötig
<br>Erzeigen i.d.R. eine Punktwolke (Point Cloud) -&gt; automatische oder manuelle Nachbearbeitung nötig
<br>Abhängigkeit von der Technologie mit Limitation behaften, u.a. bei stark reflektierenden oder transparenten Objekten
<br>Typische Einsatzgebiete:

<br>Industrie (Materialprüfung, QM, Schadenanalyse)
<br>Architektur
<br>Medizin
<br>Im Unterhaltungssektor: bei Nachbildung realer Charaktere unerlässlich


]]></description><link>repository\modellierung.html</link><guid isPermaLink="false">repository/Modellierung.md</guid><pubDate>Thu, 24 Oct 2024 16:31:16 GMT</pubDate></item><item><title><![CDATA[Modellierung und Animation 1 Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a><br>Moodle-Passwort: maxwell<br><br>
<br><a data-href="3D CGI" href="\repository\3d-cgi.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>3D CGI</a>
<br><a data-href="Animation Geschichte" href="\repository\animation-geschichte.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Animation Geschichte</a>
<br><a data-href="Mathematische Grundlagen" href="\repository\mathematische-grundlagen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Mathematische Grundlagen</a>
<br><a data-href="Einführung in Blender" href="\repository\einführung-in-blender.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Einführung in Blender</a>
<br><a data-href="Preproduction" href="\repository\preproduction.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Preproduction</a>
<br><a data-href="Modellierung" href="\repository\modellierung.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Modellierung</a>
<br>Materialien und Licht
<br><a data-href="Animation" href="\repository\animation.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Animation</a>
<br><a data-href="Rendering" href="\repository\rendering.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Rendering</a>
<br><a data-href="Postproduction" href="\repository\postproduction.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Postproduction</a>
<br><br>
<br>Überblick über Methoden und Techniken der Modellierung und Animation 
<br>Verständnis über zugrundeliegende Konzepte vermitteln 
<br>Eine Balance aus Theorie und Praxis
<br><br>Schwerpunkte sind nicht:<br>
<br>Produktion, d.h. Pre- und Postproduction, Produktionsprozess, usw. 
<br>Künstlerische Aspekte 
<br>Theoretische Vertiefung und eigene Software-Umsetzung 
<br>Programmspezifische Kenntnisse
<br><br>
<br><a data-href="Uebungsblatt 2 Modellierung und Animation" href="\repository\uebungsblatt-2-modellierung-und-animation.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="color: rgb(240, 189, 117); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Uebungsblatt 2 Modellierung und Animation</a>
]]></description><link>repository\modellierung-und-animation-1-orga.html</link><guid isPermaLink="false">repository/Modellierung und Animation 1 Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Objekte in Blender]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>Object Properties:<br>
Transformationseigenschaften von Objekten:<br>
<br>Translation (Position)
<br>Rotation (Richtung)
<br>Skalierung
<br>Object Data Properties<br>
Objektspezifische Daten<br>
<br>Licht? -&gt; Helligkeit, Farbe, ...
<br>Geometrie Objekt? -&gt; Punkte und Verbindungen
<br>Kamera -&gt; Brennweite, Verhalten, ...
]]></description><link>repository\objekte-in-blender.html</link><guid isPermaLink="false">repository/Objekte in Blender.md</guid><pubDate>Thu, 24 Oct 2024 16:31:16 GMT</pubDate></item><item><title><![CDATA[Postproduction]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>Visual Effects, Color tweaking -
<br>Vertonung (Music-&amp; Sounddesign, Effekte, etc.) 
<br>Compositing, ggf. mit Realszenen 
<br>Schnitte, Editing 
<br>Color Grading 
<br>Formatwandlungen für verschiedene Medien
]]></description><link>repository\postproduction.html</link><guid isPermaLink="false">repository/Postproduction.md</guid><pubDate>Thu, 24 Oct 2024 16:31:16 GMT</pubDate></item><item><title><![CDATA[Potenzen und Wurzeln]]></title><description><![CDATA[<a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> <a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> 
 <br><a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a><br><br>
<br>
<br>
<br>
<br>
<br>
<br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br>]]></description><link>repository\potenzen-und-wurzeln.html</link><guid isPermaLink="false">repository/Potenzen und Wurzeln.md</guid><pubDate>Thu, 24 Oct 2024 16:31:16 GMT</pubDate></item><item><title><![CDATA[Preproduction]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>Ideenfindung
<br>Design- und Planungsphase
<br>Storytelling
<br>Screenplay
<br>Storyboard
<br>Organisatorisches (Budget, HR, Lizenzen, Versicherungen usw.
]]></description><link>repository\preproduction.html</link><guid isPermaLink="false">repository/Preproduction.md</guid><pubDate>Thu, 24 Oct 2024 16:31:16 GMT</pubDate></item><item><title><![CDATA[Programmieren 1 - Übungsblatt 1]]></title><description><![CDATA[<a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br><br><a data-tooltip-position="top" aria-label="repository/Attachments/Programmieren1/Uebungen/Uebung1/Uebung1_1.cpp" data-href="repository/Attachments/Programmieren1/Uebungen/Uebung1/Uebung1_1.cpp" href="\repository\attachments\programmieren1\uebungen\uebung1\uebung1_1.cpp" class="internal-link" target="_self" rel="noopener nofollow">Uebung1_1</a><br>#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "START THE GAME" &lt;&lt; std::endl;
    std::cout &lt;&lt; "******" &lt;&lt; std::endl;
    std::cout &lt;&lt; "FINISH" &lt;&lt; std::endl;

    return 0;
}
Copy<br><br><a data-tooltip-position="top" aria-label="Uebung1_2.cpp" data-href="Uebung1_2.cpp" href="\repository\attachments\programmieren1\uebung1_2\uebung1_2.cpp" class="internal-link" target="_self" rel="noopener nofollow">Uebung1_2</a><br>#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "@@@                                                             " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%%%             @%%                                             " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%%#%             %%%@                                           " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%%##%%          %%##%@                                          " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%##%#%%         %####%                                          " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%#%###%#%%%@ @%%%###%%@       %*#                               " &lt;&lt; std::endl;
    std::cout &lt;&lt; "%%#%###%#####@#%%##%#%@   *** *-=+                              " &lt;&lt; std::endl;
    std::cout &lt;&lt; " %############%%%%%#%@    =--=*+#*%                             " &lt;&lt; std::endl;
    std::cout &lt;&lt; "  %###%########%%%%%%@    +-*@*#=.O*@                           " &lt;&lt; std::endl;
    std::cout &lt;&lt; "   #################%%@@  +=+ O ==  -@                          " &lt;&lt; std::endl;
    std::cout &lt;&lt; "     ##############%%%%#@ #=*    =:  *@                         " &lt;&lt; std::endl;
    std::cout &lt;&lt; "        @%%######%%%####%@ *#:   :+ :%@                         " &lt;&lt; std::endl;
    std::cout &lt;&lt; "              @%%%#######% %+*:  :#+=+@                         " &lt;&lt; std::endl;
    std::cout &lt;&lt; "               @%#%######%@ #-+##**-==:+#                       " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                 %########%  #*+*=-------=**%                   " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                   %%#####@ +-=*=----:-=*#                      " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                      @@@%%@%+-+#=--=*@**                       " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                        @%%@ @=--*@@@@@@*%                      " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          #%  *:--*@@@@@@*#                     " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          %%%@%=---*@@@@@@#*#                   " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                           %%%@+**--#@@@%%@@*=*%                " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                         @@@@#%+-*=--+#****@*--=#               " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                         @@@@%%%%**=---=++=--:--*               " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          @@@@%%%*-*+----:-:---*@               " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          @@@@@%%*--=#=--::-+%                  " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                         @@@@@@@+----:-*****                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                        %@@@@@%*###%%%%#+-*@     @@%@@@@        " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                       @%%@@@@@**#%%#####%@@ @%%########%%      " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                  @@%%%@%@@@@@%*****#%####%%%%###########%      " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                  %##%%%%%%%@@#*****%%%#%%%%%%%#######%#%       " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                  %##%@@@%%##########%%%%%%##%%#%#####%%        " &lt;&lt; std::endl;
    std::cout &lt;&lt; "              @###%#%@@@@@@%###############%##%##%##%%          " &lt;&lt; std::endl;
    std::cout &lt;&lt; "             ####%##%%%%@@@#%###############%%##%%@             " &lt;&lt; std::endl;
    std::cout &lt;&lt; "             @%#%##%%@%###%#**%%%##%#####%%#%@@                 " &lt;&lt; std::endl;
    std::cout &lt;&lt; "              %%%% %%%%%%@#*******#%@@%%%%%@                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "              @%#%  %%@%%% #%********%@@                        " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                %%% @%@%%#           @%%#%%@                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                 %%@  @%%@               @%%%%%%@@              " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                   @@  %%%%                @%%%%%%%%@           " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                    %@ %%%%                    @@%%%%%%@        " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                       %%%@%                         @%%%@@@    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                        @%%%                              @@@@  " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                        @%%%                                   @" &lt;&lt; std::endl;
    std::cout &lt;&lt; "                         @%%                                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          %@                                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          %@                                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                          @%                                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "                           @                                    " &lt;&lt; std::endl;
    std::cout &lt;&lt; "  ___ ___  ___   ___ ___    _   __  __ __  __   ___ _  _    ___ " &lt;&lt; std::endl;
    std::cout &lt;&lt; " | _ \\ _ \\/ _ \\ / __| _ \\  /_\\ |  \\/  |  \\/  | |_ _| \\| |  / __|" &lt;&lt; std::endl;
    std::cout &lt;&lt; " |  _/   / (_) | (_ |   / / _ \\| |\\/| | |\\/| |  | || .` | | (__ " &lt;&lt; std::endl;
    std::cout &lt;&lt; " |_| |_|_\\\\___/ \\___|_|_\\/_/ \\_\\_|  |_|_|  |_| |___|_|\\_|  \\___|" &lt;&lt; std::endl;
    std::cout &lt;&lt; "                                                                " &lt;&lt; std::endl;

    return 0;
}
Copy<br><br><a data-tooltip-position="top" aria-label="Uebung1_3.cpp" data-href="Uebung1_3.cpp" href="\repository\attachments\programmieren1\uebung1_3\uebung1_3.cpp" class="internal-link" target="_self" rel="noopener nofollow">Uebung1_3</a><br>#include &lt;iostream&gt;
#include &lt;climits&gt;

int main()
{
    std::cout &lt;&lt; "Datentyp bool benoetigt " &lt;&lt; sizeof(bool) &lt;&lt; " Byte und kann Werte im Bereich [" 
        &lt;&lt; std::numeric_limits&lt;bool&gt;::min() &lt;&lt; ", " &lt;&lt; std::numeric_limits&lt;bool&gt;::max() 
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    std::cout &lt;&lt; "Datentyp char benoetigt " &lt;&lt; sizeof(char) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; CHAR_MIN &lt;&lt; ", " &lt;&lt; CHAR_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    /*for (int i = -128; i &lt; 128; i++) {
        char c = i;
        std::cout &lt;&lt; i &lt;&lt; " : " &lt;&lt; c &lt;&lt; std::endl;
    }*/

    std::cout &lt;&lt; "Datentyp short benoetigt " &lt;&lt; sizeof(short) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; SHRT_MIN &lt;&lt; ", " &lt;&lt; SHRT_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    std::cout &lt;&lt; "Datentyp int benoetigt " &lt;&lt; sizeof(int) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; INT_MIN &lt;&lt; ", " &lt;&lt; INT_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    std::cout &lt;&lt; "Datentyp long benoetigt " &lt;&lt; sizeof(long) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; LONG_MIN &lt;&lt; ", " &lt;&lt; LONG_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    std::cout &lt;&lt; "Datentyp float benoetigt " &lt;&lt; sizeof(float) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; FLT_MIN &lt;&lt; ", " &lt;&lt; FLT_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;

    std::cout &lt;&lt; "Datentyp double benoetigt " &lt;&lt; sizeof(double) &lt;&lt; " Byte und kann Werte im Bereich ["
        &lt;&lt; DBL_MIN &lt;&lt; ", " &lt;&lt; DBL_MAX
        &lt;&lt; "] abspeichern" &lt;&lt; std::endl;
}
Copy]]></description><link>repository\programmieren-1-übungsblatt-1.html</link><guid isPermaLink="false">repository/Programmieren 1 - Übungsblatt 1.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Programmieren 1 - Übungsblatt 2]]></title><description><![CDATA[<a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br>]]></description><link>repository\programmieren-1-übungsblatt-2.html</link><guid isPermaLink="false">repository/Programmieren 1 - Übungsblatt 2.md</guid><pubDate>Thu, 24 Oct 2024 16:30:59 GMT</pubDate></item><item><title><![CDATA[Programmieren 1 Orga]]></title><description><![CDATA[<a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> <a class="tag" href="?query=tag:Orga" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Orga</a> 
 <br><a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <a href=".?query=tag:Orga" class="tag" target="_blank" rel="noopener nofollow">#Orga</a> <br>Moodle Passwort PROG189<br><br>
<br><a data-href="Programmiersprachen" href="\repository\programmiersprachen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Programmiersprachen</a>
<br><a data-href="Kompilierte vs. Interpretierte Sprachen" href="\repository\kompilierte-vs.-interpretierte-sprachen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Kompilierte vs. Interpretierte Sprachen</a>
<br><a data-href="Syntax und Semantik" href="\repository\syntax-und-semantik.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Syntax und Semantik</a>
<br><a data-href="Das erste Programm" href="\repository\das-erste-programm.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Das erste Programm</a>
<br><a data-href="Elementare Datentypen" href="\repository\elementare-datentypen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Elementare Datentypen</a>
<br><a data-href="Arithmetische Operatoren" href="\repository\arithmetische-operatoren.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Arithmetische Operatoren</a>
<br><a data-href="Visual Studio - Tipps und Tricks" href="\repository\visual-studio-tipps-und-tricks.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Visual Studio - Tipps und Tricks</a>
<br><a data-href="Ein - und Ausgabe über die Konsole" href="\repository\ein-und-ausgabe-über-die-konsole.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Ein - und Ausgabe über die Konsole</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programmieren 1 - Übungsblatt 1" data-href="Programmieren 1 - Übungsblatt 1" href="\repository\programmieren-1-übungsblatt-1.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="color: rgb(240, 189, 117); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Übungsblatt 1</a>
<br><a data-tooltip-position="top" aria-label="Programmieren 1 - Übungsblatt 2" data-href="Programmieren 1 - Übungsblatt 2" href="\repository\programmieren-1-übungsblatt-2.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="color: rgb(240, 189, 117); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Übungsblatt 2</a>
]]></description><link>repository\programmieren-1-orga.html</link><guid isPermaLink="false">repository/Programmieren 1 Orga.md</guid><pubDate>Thu, 24 Oct 2024 16:30:59 GMT</pubDate></item><item><title><![CDATA[Programmiersprachen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a><br>
Es gibt eine große Anzahl von Programmiersprache, die nach verschiedenen Kriterien unterscheidbar sind, z.B.<br><br>
<br>Portabilität / Geschwindigkeit / ...
<br><br>
<br>Unterstützter Programmierstil, z.B. prozedurale (strukturiert) oder objektorientiert
<br><br>
<br>Definition / Kombination von Datentypen
<br><br>
<br>High und low Level Sprachen
]]></description><link>repository\programmiersprachen.html</link><guid isPermaLink="false">repository/Programmiersprachen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:18 GMT</pubDate></item><item><title><![CDATA[Random Access Maschinen (RAM)s]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:IT-Systeme" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IT-Systeme</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:IT-Systeme" class="tag" target="_blank" rel="noopener nofollow">#IT-Systeme</a> <br>Bei RAMs handelt es sich um ein universelles Berechnungsmodell, bei dem davon ausgegangen wird, dass mit ihm alles ausgerechnet werden kann, was potentiell berechenbar ist.<br>Die Idee der RAM erwuchs von den späten 50ern bis Anfang der 70er des letzten Jahrhunderts; ihre Erfindung kann schlecht einer oder wenigen Personen zugeordnet werden.<br>RAMs können als Basis für den Entwurf moderner Rechner angesehen werden.<br>Wir wollen ein mathematisches Modell für Rechner erarbeiten, das der Arbeitsweise realer Rechner nahe kommt.<br>
Grund: reale Rechner sind sehr verschieden hinsichtlich:<br>
<br>Prozessor (CRAY Y-MP, Pentium 4)
<br>Architektur (CRAY Y-MP, Pentium 4)
<br>Rechenkraft
<br>Speicherkpazität
<br>...
<br>Mit Random-Access-Maschinen (RAM) (auch: Registermaschinen) lernen wir ein wichtiges Berechnungsmodell, kennen, das die wesentlichen Eigenschaften realer Rechner beinhaltet, jedoch von technischen Details abstrahiert.<br> RAM Register<br>
<br>jedes der Register  enthält eine natürliche Zahl
<br>die Steuereinheit verfügt über ein Programm (Liste numerischer Befehle)
<br>verschiedene RAMs unterscheiden sich nur durch ihr Programm
<br>Unterschiede zu realen Rechnern:<br>
<br>RAM hat unendlich viele Register
<br>RAM-Register haben unbegrenzte Anzahl von Bits (können beliebig große natürliche Zahlen speichern)
<br>RAM kann auf jedem Register rechnen.
<br>Bei der RAM wird das Programm vom Speicher getrennt gehalten und ist fest in der Maschine "verlötet".
<br>Weitere technische Details.
<br>Die konkrete Anzahl der Register und des Speicherplatzes für jedes Register sind in diesem Modell abgewandelt worden. Es wird kein Unterschied zwischen "normalem", adressierbarem Speicher (Echte Computer verfügten über viel Speicherraum, auf dem aber nicht gerechnet werden kann (Festplatten!)) und Registern (von diesen gibt es auf echten Computern nur wenige Register auf denen gerechnet werden kann) gemacht. Daten werden dort durch Lese und Schreibzyklen verwendet.<br>
Bei normalen Rechnern liegt das Programm im Speicher (von-Neumann-Architektur), d.h. die Maschine lasst prinzipiell zu, dass ein Programm sich selbst modifizieren kann. Bei unserer RAM ist das nicht möglich, weil das Programm getrennt vom Arbeitsspeicher unveränderlich in die RAM eingebaut ist.<br><br>
<br>arbeitet taktweise
<br>Programm besteht aus einer durchnummerierten endlichen Liste von Befehlen
<br>in jedem Takt wird genau ein Befehl ausgeführt (derjenige, dessen Nummer im Instruction Pointer (IP) steht) (deutsch: Befehlsregister (BR))
<br>startet immer mit dem 0. Befehl
<br>stoppt, $\text{R}ls Befehlsregister auf Stopp-Befehl oder auf keinen Befehl zeigt
<br>Wir benutzen folgende Schreibweisen:<br>
 = Zahl, die im Register  steht<br>
 = Zahl, die im Register  steht<br>RAMs können nur mit positiven ganzen Zahlen inklusive der Null umgehen ()<br>
Sie sollten trotzdem Subtrahieren können. Dazu definieren wir die folgende Operation.<br>Definition 1 (modifizierte Differenz)
Für natürliche Zahlen ,  sei:<br>

<br><br>Folgende Befehle können in RAM-Programmen verwendet werden; die Variablen ,  und  stehen dabei für feste, konstante natürliche Zahlen:<br><br><br>Berechnung der Multiplikation mit einer RAM: <br>
Ausgangssituation:  für <br>
Endsituation: <br>
Idee: <br>
Hilfsregister:  Zwischensumme, <br>
Programm:<br><br>Durch RAMs erhalten wir eine mathematische Präzisierung des Begriffs Berechenbarkeit.<br>Definition 2 (RAM-Berechenbarkeit)
Eine Funktion  mit  heißt von einer RAM M berechnet, falls für beliebige  gilt:<br>
<br>
Eine Funktion  mit  heißt RAM-berechenbar, wenn es eine RAM gibt, die  berechnet.<br>
.
<br>Beispiel: Die Funktion  ist RAM-berechenbar, weil die folgende RAM diese Funktion berechnet:<br>R0 &lt;- R0 + R1
R0 &lt;- R0 + R2
STOP
Copy<br>Denn wenn man die Register R0, R1, R2 mit den Eingaben  befüllt, alle anderen Register mit , und dann die RAM startet, so hält sie nach 3 Schritten und der letzte Inhalt von R0 (also der Inhalt von R0 wenn sie hält) ist gleich <br>Diese Definition führt dazu, dass eine einzige RAM ganz unterschiedliche Funktionen berechnen kann, je nachdem mit wie vielen Eingaben man sie füttert.<br>Beispiel: Es sei die folgende RAM gegeben:<br>R0 &lt;- R0 + R1
STOP
Copy<br>Diese RAM berechnet<br>
<br>Die 1-stellige Funktion  mit  für alle  (Das ist die sogenannte Identitätsfunktion). Sie bildet Ihr einziges Argument stehts auf sich selbst ab.<br>
Denn wenn man nur das Register R0 mit einer Eingaben  befüllt, alle anderen Register mit , und dann die RAM startet, so hält sie nach 2 Schritten und der letzte Inhalt von R0 ist gleich .
<br>Die 2-stellige Funktion  mit .<br>
Denn wenn man die Register R0, R1 mit den Eingaben  befüllt, alle anderen Register mit , und dann die RAM startet, so hält sie nach 2 Schritten und der letzte Inhalt von R0 ist gleich <br>
Jede RAM berechnet sogar unendlich viele Funktionen, nämlich für jedes  genau eine -stellige Funktion. So berechnet die Beispiel RAM zur Multiplikation unter anderem
<br>die 2-stellige Funktion  mit ,
<br>die 1-stellige Funktion  mit  und 
<br>die 3-stellige Funktion  mit 
<br>Wir wollen uns im folgenden mit Zahlen und möglichen Darstellungen beschäftigen. Dazu sollen vorweg einige Begriffe und Notationen dargestellt werden<br>Definition 3
Für eine Menge  notieren wir die Anzahl der Elemente von  mit  oder .
<br>Definition 4

<br>Die Menger der nichtnegativen ganzen Zahlen sind die natürlichen Zahlen. Wir notieren diese Menge mit . Es gilt also:<br>

<br>Die Menge der positiven ganzen Zahlen notieren wir mit . Es gilt also: .
<br>Die Menge der ganzen Zahlen notieren wir mit . Es gilt also:<br>
.
<br>Die Menge der rationalen Zahlen notieren wir mit . Es gilt also:<br>


]]></description><link>repository\random-access-maschinen-(ram)s.html</link><guid isPermaLink="false">repository/Random Access Maschinen (RAM)s.md</guid><pubDate>Thu, 24 Oct 2024 16:31:19 GMT</pubDate></item><item><title><![CDATA[Game Engineering und Visual Computing Obsidian Vault]]></title><description><![CDATA[ 
 <br><br>Hier werden die Unterlagen aller Kurse zu Backup Zwecken regelmäßig hochgeladen<br><br><a data-tooltip-position="top" aria-label="Mathe-Vorkurs Orga" data-href="Mathe-Vorkurs Orga" href="\repository\mathe-vorkurs-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Mathe-Vorkurs</a><br>
<a data-tooltip-position="top" aria-label="Einführung in die Informatik Orga" data-href="Einführung in die Informatik Orga" href="\repository\einführung-in-die-informatik-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiBackpack" aria-label="LiBackpack" data-icon="LiBackpack" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-backpack"><path d="M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"></path><path d="M8 10h8"></path><path d="M8 18h8"></path><path d="M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"></path><path d="M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path></svg></span>Einführung in die Informatik</a><br>
<a data-tooltip-position="top" aria-label="Programmieren 1 Orga" data-href="Programmieren 1 Orga" href="\repository\programmieren-1-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiKeyboard" aria-label="LiKeyboard" data-icon="LiKeyboard" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-keyboard"><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect x="2" y="4" width="20" height="16" rx="2"></rect></svg></span>Programmieren 1</a><br>
<a data-tooltip-position="top" aria-label="Modellierung und Animation 1 Orga" data-href="Modellierung und Animation 1 Orga" href="\repository\modellierung-und-animation-1-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiCuboid" aria-label="LiCuboid" data-icon="LiCuboid" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-cuboid"><path d="m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"></path><path d="M10 22v-8L2.25 9.15"></path><path d="m10 14 11.77-6.87"></path></svg></span>Modellierung und Animation 1</a><br>
<a data-tooltip-position="top" aria-label="Lineare Algebra und analytische Geometrie Orga" data-href="Lineare Algebra und analytische Geometrie Orga" href="\repository\lineare-algebra-und-analytische-geometrie-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiPlusSquare" aria-label="LiPlusSquare" data-icon="LiPlusSquare" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-plus-square"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M8 12h8"></path><path d="M12 8v8"></path></svg></span>Lineare Algebra und analytische Geometrie</a><br>
<a data-tooltip-position="top" aria-label="IT-Systeme Orga" data-href="IT-Systeme Orga" href="\repository\it-systeme-orga.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiMonitorSpeaker" aria-label="LiMonitorSpeaker" data-icon="LiMonitorSpeaker" aria-hidden="true" style="color: rgb(117, 240, 240); transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-monitor-speaker"><path d="M5.5 20H8"></path><path d="M17 9h.01"></path><rect x="12" y="4" width="10" height="16" rx="2"></rect><path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"></path><circle cx="17" cy="15" r="1"></circle></svg></span>IT-Systeme</a>]]></description><link>repository\readme.html</link><guid isPermaLink="false">repository/README.md</guid><pubDate>Thu, 24 Oct 2024 16:31:19 GMT</pubDate></item><item><title><![CDATA[Rendering]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br>
<br>
Umsetzung aller Szeneninformationen (Geometrie, Material, Licht usw.) in Pixelrepräsentation

<br>
Unterschiedliche Rendering-Methoden, die sich z.T. stark unterscheiden:

<br>Rasterisierung / Scanline Rendering
<br>Raytracing
<br>Radiosity


<br>
Für Artists wichtige Unterschiede verschiedener Renderer

<br>Echtzeitfähigkeit vs. Fotorealismus
<br>Funktion (Motion Blur, Verteilbarkeit, Instancing, etc.)
<br>Geschwindigkeit
<br>Materialsystem
<br>Physikalische Korrektheit (biased vs. unbiased)
<br>Progressive
<br>Optischer Flavour
<br>etc.


<br><br>
<br>
Ablauf i.A. in drei Stages:

<br>Application Stage: Anwendungsspezifische Aufgaben, z.B. Kollisionserkennung -&gt; i.d.R. CPU
<br>Geometry Stage: Ermittlung der zu rendernden Geometrie, z.B. Projektion, Clipping -&gt; GPU
<br>Rasterization Stage: Bilderstellung -&gt; GPU


<br>
Für jedes Dreieck der Geometry Stage:

<br>Finde die Pixel im Raster, die es überdeckt
<br>Für jedes dieser Pixel 

<br>Finde die Farbe des Pixels (pixel shader stage)
<br>(Welches Pixel ist vorne? Was ist mit Transparenz)




<br><br>
<br>Grundlegendes ray tracing Verfahren: 

<br>Rays werden ausgehend von der Kamera erzeugt<br>
<img alt="Raytracing Schatten Mapping.png" src="\repository\attachments\raytracing-schatten-mapping.png" style="width: 200px; max-width: 100%;">
<br>Pro Pixel der Bildebene wird mind. ein Strahl konstruiert 
<br>Schnittpunkt mit kürzestem Abstand zum Augpunkt berechnen 
<br>Beleuchtungsmodell am Schnittpunkt auswerten und Farbwert dem Pixel des Strahls zuweisen<br>
<img alt="Raytracing Camera Plane Schaubild.png" src="\repository\attachments\raytracing-camera-plane-schaubild.png" style="width: 350px; max-width: 100%;">


<br>Strahlen können an Oberflächen neue Strahlen Erzeugen
<br>Aus der Realität bekannte Effekte wie Schatten, Spiegelung und Refraktion sind damit konzeptionell und technisch direkt in den ray tracing Ablauf integrierbar<br>
<img alt="Raytracing Reflektion Refraktion Schaubild.png" src="\repository\attachments\raytracing-reflektion-refraktion-schaubild.png" style="width: 300px; max-width: 100%;">
<br>Rasterisierung

<br>Effizient in Hardware umsetzbar (GPU)
<br>Echtzeitfähig  Games
<br>Physikalische Effekte werden oft vereinfacht ermittelt / approximiert (vgl. Reflexion, Refraktion)  nicht physikalisch korrekt, kein Fotorealismus
<br>In Blender: Eevee


<br>Ray tracing<br>
- Aufwändig zu berechnen, i.d.R. nicht echtzeitfähig<br>
- Oft lange Renderzeiten benötigt  i.d.R. für offline Rendering / Produktvisualisierung u.ä. geeignet<br>
- Physikalisch korrektes Rendering (und damit Fotorealismus) möglich<br>
- In Blender: Cycles
Fotorealismus
Rendering die von Realen Aufnahmen nicht zu unterscheiden sind


<br>Die Abbildung spezifischer optischer Effekte ist also fundamental von der Rendermethode abhängig und unterscheidet sich ggf. bei diesen stark.
]]></description><link>repository\rendering.html</link><guid isPermaLink="false">repository/Rendering.md</guid><pubDate>Thu, 24 Oct 2024 16:31:19 GMT</pubDate><enclosure url="repository\attachments\raytracing-schatten-mapping.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\raytracing-schatten-mapping.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Summen und Reihen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<br><br>Alle Glieder sind konstant: <br>
| <br><br>Differenz zweier Glieder ist konstant: <br>
<br>
<br>
<br>
Spezialfall: <br><br>Quotient zweier Folgeglieder ist konstant: <br>
<br>
<br>
<br>
<br>
, <br>, <br><br>
<br>Feld: 1 Korn
<br>Feld: 2 Körner
<br>Feld: 4 Körner
<br>Feld:  Körner<br>
<br>
 Reiskörner   
<br><br>, <br><br><br> existiert endlich<br><br> existiert nicht (oder ist )<br><br>,  <br><br>
<br>
<br>
<br><br><br>
<br>
<br>
<br><br><br><br>
<br> hat keinen Grenzwert
<br>
<br> ist divergent
<br> ist konvergent
]]></description><link>repository\summen-und-reihen.html</link><guid isPermaLink="false">repository/Summen und Reihen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:20 GMT</pubDate></item><item><title><![CDATA[Syntax und Semantik]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br>
<br>Definiert das Erscheinungsbild des Quelltextes/Codes und liefert ein Regelwerk (Grammatik) für die Zusammensetzung von:
<br>einzelnen Zeichen zu einem Wort
<br>einzelnen Wörtern zu einem Satz
<br>einzelnen Sätzen zu einem Quelltext eines Programms
Yoda
Viel zu lernen du noch hast.


<br><br>
<br>Definiert die Bedeutung von Zeichen-/Wortfolgen.
<br>Drückt die Wortwahl das aus, was eigentlich gemeint war?
E. Stoiber
Ich hab's mir angewöhnt, dass ich jeden Tag in der Früh in den Garten schau' und vielleicht eine Blume hinrichte.


]]></description><link>repository\syntax-und-semantik.html</link><guid isPermaLink="false">repository/Syntax und Semantik.md</guid><pubDate>Thu, 24 Oct 2024 16:31:20 GMT</pubDate></item><item><title><![CDATA[Terme]]></title><description><![CDATA[<a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> <a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> 
 <br><a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <br><br>TERM = "sinnvoller" Rechenausdruck aus<br>
<br>Zahlen
<br>Variablen
<br>Verknüpfungen<br>
z.B. 
<br>Zahlen: 
<br>Variable: 
<br>Verknüpfungen:  (hoch)
<br>Termbeispiel: <br><br>(Verknüpfung von Termen)<br>
<br>Kommutativgesetz: , 
<br>Assoziativgesetz: , 
<br>Distributivgesetz: 
<br><br><br>
<br>Distributivgesetz
<br>binomische Formeln:

<br>
<br>
<br>


<br><br>
<br>Ausklammern
<br>binomische Sätze
<br>Polynomdivision, Polynom-Nullstellen
]]></description><link>repository\terme.html</link><guid isPermaLink="false">repository/Terme.md</guid><pubDate>Thu, 24 Oct 2024 16:31:20 GMT</pubDate></item><item><title><![CDATA[Termumformungen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> <a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> 
 <br><a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a><br>
<a data-href="Uebung Termumformungen Ausmultiplizieren Faktorisieren.jpg" href="\repository\attachments\uebung-termumformungen-ausmultiplizieren-faktorisieren.jpg" class="internal-link" target="_self" rel="noopener nofollow">Uebung Termumformungen Ausmultiplizieren Faktorisieren.jpg</a><br><br>
<br><br>

<br><br>

<br><br>
<br>

<br><br>
<br>

<br><br>
<br>

<br><br>

<br><br>

<br><br>

<br>

<br>Glied von <br>
17.Ebene des Pascallischen Dreieck:<br>
<br>
13.Glied: 


<br>Berechnen Sie <br>
<br>
<br>

<br><br>
<br>
<br>
<br>
<br>
<br>
]]></description><link>repository\termumformungen.html</link><guid isPermaLink="false">repository/Termumformungen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:21 GMT</pubDate></item><item><title><![CDATA[Trigonometrie]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<a data-tooltip-position="top" aria-label="Hyperbolische Funktionen" data-href="Hyperbolische Funktionen" href="\repository\hyperbolische-funktionen.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="LiSquareEqual" aria-label="LiSquareEqual" data-icon="LiSquareEqual" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-square-equal"><rect x="3" y="3" width="18" height="18" rx="2"></rect><path d="M7 10h10"></path><path d="M7 14h10"></path></svg></span>Näherungsweise Trigonometrische Funktionen</a><br><br><img alt="Rechtwinkliges Dreieck Seiten Beschriftet.png" src="\repository\attachments\rechtwinkliges-dreieck-seiten-beschriftet.png" style="width: 200px; max-width: 100%;"><br>
<br>
<br>
<br>Strahlensatz: Die Verhältnisse zweier Seiten sind in allen rechtwinkeligen Dreiecken gleich.<br><br><img alt="Einheitskreis 45 Grad sin cos.png" src="\repository\attachments\einheitskreis-45-grad-sin-cos.png" style="width: 250px; max-width: 100%;"><img alt="Bogenmaß Uebersicht Winkel.png" src="\repository\attachments\bogenmaß-uebersicht-winkel.png" style="width: 350px; max-width: 100%;"><br><br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
]]></description><link>repository\trigonometrie.html</link><guid isPermaLink="false">repository/Trigonometrie.md</guid><pubDate>Thu, 24 Oct 2024 16:31:21 GMT</pubDate><enclosure url="repository\attachments\rechtwinkliges-dreieck-seiten-beschriftet.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\rechtwinkliges-dreieck-seiten-beschriftet.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Uebungsblatt 2 Modellierung und Animation]]></title><description><![CDATA[<a class="tag" href="?query=tag:Übung" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Übung</a> <a class="tag" href="?query=tag:Modellierung-und-Animation1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Modellierung-und-Animation1</a> 
 <br><a href=".?query=tag:Übung" class="tag" target="_blank" rel="noopener nofollow">#Übung</a> <a href=".?query=tag:Modellierung-und-Animation1" class="tag" target="_blank" rel="noopener nofollow">#Modellierung-und-Animation1</a> <br><br><br><br>Rasterisierung: Bei der Rasterisierung wird für jedes Dreieck eines triangulierten Meshes dessen Position auf dem Bildschirm berechnet. Weitere Attribute wie Beleuchtung, Oberflächenverhalten und weitere müssen durch Tricks simuliert werden.<br>Raytracing: Beim Raytracing wird durch jedes Pixel ein Strahl (auch "Ray") geschossen. Alle Kollisionen mit Objekten in einer Szene werden dann wahrgenommen. Anschließend werden von den Kollisionspunkten aus weitere Rays in Richtung von Lichtquellen gesendet. Erreichen Rays eine Lichtquelle so werden die Werte des Lichts mit denen der Materialen auf denen der Ray unterwegs war verrechnet um das entsprechende Pixel zu färben. Diese Methode führt von sich aus zu Schatten und anderen möglicherweise sogar Fotorealistischen Effekten.<br><br><br>Festgestellte Unterschiede<br>
Das Rendering durch Raycasting (Cycles) ist sehr viel langwieriger, unterstützt aber sehr viel besser aussehende Schatten. Beim Render Prozess lässt sich erkennen, dass einzelne Pixel durch ein Rauschen beeinflusst sind, das sich mit der Zeit legt und zu Ende durch den Noise Filter eliminiert wird. Es spricht für das Abfragen, ob einzelne Rays eine Lichtquelle treffen.<br>
<img alt="Burg Rendering Raytracing.png" src="\repository\attachments\burg-rendering-raytracing.png" style="width: 400px; max-width: 100%;"><br>
Das Rendering durch EEVEE (Rasterisierung) hingegen sieht sehr viel schlechter aus, ist dagegen allerdings auch nach einigen Sekunden fertig gerendert. Das aussehen der Objekte im Bezug auf Lichtquellen ist nicht szenenbezogen und erzeugt daher nur eine grobe Illusion der Illumination.<br>
<img alt="Burg Rendering Rasterisierung.png" src="\repository\attachments\burg-rendering-rasterisierung.png" style="width: 400px; max-width: 100%;"><br>
Durch das einschalten der "Raytracing Option" im EEVEE Menü kann das Aussehen hingegen etwas verbessert werden.<br>
<img alt="Burg Rendering Rasterisierung Raytracing.png" src="\repository\attachments\burg-rendering-rasterisierung-raytracing.png" style="width: 400px; max-width: 100%;"><br><br><br>Ja, alles war einfach nachvollziehbar. Die Transformationen finden immer vom Zentrum des Würfels aus statt.<br><br>
<br>
<br><br>Da der Würfel rotiert wurde liegt die Rotationsachse nicht mehr auf die weise wie die globalen Achsen in dem Würfel. Dadurch rotiert der Würfel möglicherweise nicht wie erwartet.<br><br>Nun verhalten sich die Transformationen immer relativ zum jeweiligen Objekt. Das heißt, dass zum Beispiel nach einer Rotation eine Skalierung auch in Richtung der Achse des Würfels stattfindet statt der des Globalen Koordinatensystems.]]></description><link>repository\uebungsblatt-2-modellierung-und-animation.html</link><guid isPermaLink="false">repository/Uebungsblatt 2 Modellierung und Animation.md</guid><pubDate>Thu, 24 Oct 2024 16:31:22 GMT</pubDate><enclosure url="repository\attachments\burg-rendering-raytracing.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\burg-rendering-raytracing.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Ungleichungen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a><br>
<br>
Auflösung wie bei Gleichungen<br>Ausnahme
Bei Multiplikation/Division mit negativer Zahl ändert sich die Richtung des Ungleichheitszeichens<br>
Bei Multiplikation/Division mit Termen:&nbsp;Fallunterscheidung
<br><br><br><br>
<br>
<br>
<br>
Lösung: <br><br><br>
<br>
<br>
<br>
<br><br>
<br>Lösung: <br>
Gesamtlösung: ]]></description><link>repository\ungleichungen.html</link><guid isPermaLink="false">repository/Ungleichungen.md</guid><pubDate>Thu, 24 Oct 2024 16:31:22 GMT</pubDate></item><item><title><![CDATA[Vektorrechnung]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Mathe-Vorkurs" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mathe-Vorkurs</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Mathe-Vorkurs" class="tag" target="_blank" rel="noopener nofollow">#Mathe-Vorkurs</a> <br> Definition
Vektor : Größe gekennzeichnet durch Lage &amp; Richtung<br>
Skalar : Größe gekennzeichnet durch Lage &amp; Wert<br>
Betrag eines Vektors , Länge des Pfeils (Skalar,)<br>
Nullvektor <br>
Einheitsvektor: Vektor  mit Länge/Betrag 1<br>

<br><br><br>
<img alt="Vektor Addition.png" src="\repository\attachments\vektor-addition.png" style="width: 250px; max-width: 100%;"><br><br><br><br><br>
<br>
<br><br><br>
<img alt="Vektor Visualisierung.png" src="\repository\attachments\vektor-visualisierung.png"><br><br><br><br><br><br>
<br><br><br>
<br><br><br><br>Merke:

<br>Die von zwei Vektoren eingespannte Fläche  mit dem Schnittwinkel  entspricht<br>


]]></description><link>repository\vektorrechnung.html</link><guid isPermaLink="false">repository/Vektorrechnung.md</guid><pubDate>Thu, 24 Oct 2024 16:31:23 GMT</pubDate><enclosure url="repository\attachments\vektor-addition.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="repository\attachments\vektor-addition.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Visual Studio - Tipps und Tricks]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Programieren1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programieren1</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Programieren1" class="tag" target="_blank" rel="noopener nofollow">#Programieren1</a> <br><br>
<br>Der Quellcode kann mit verschiedenen Konfigurationen übersetzten. Die klassischen Konfigurationen sind Debug und im Release. 

<br>Beides führt zu einer ausführbaren .exe Datei 


<br>Debuggen bedeutet: Fehlersuchen  Bugs finden 
<br>Die Debug Version enthält vielfältige Informationen zur Fehlersuche und ist deshalb langsamer als die Release Version. 

<br>Es ist möglich Breakpoints an jeder Stelle des Quellcodes zu setzen, um sich den aktuellen Inhalt der Variablen (deren Wert) während der Ausführung anzusehen 


<br>Die Release Version (Für die finale Version gedacht, die verfügbar gemacht wird)

<br>Optimiert den Code in Sachen Speicher und Laufzeit 
<br>Es ist möglich Breakpoints an wenigen Stellen des bereits durch den Compiler optimierten Quellcodes zu setzen. Inhalte der Variablen sind aber nicht einsehbar.


<br><br>
<br>Sog. Breakpoints werden am linken Fensterrand mit der Mouse gesetzt (roter Punkt) und sind Haltestellen an dem die Ausführung des Codes im Debug-Modus pausiert. 
<br>Steppen bzw. „durch den Code steppen“: Schrittweise/ Befehlszeile für Befehlszeile den Code durchgehen und den Inhalt der Variablen überprüfen bzw. einen möglichen Fehler suchen 
<br>Shortcuts 

<br>F5: Code nach Stopp bei Breakpoint weiter ausführen 
<br>F10: Zeile für Zeile auf aktueller Codeebene 
<br>F11: Zeile für Zeile und Sprung in eine Tiefer Codeebene z.B. in eine aufgerufene Funktion 
<br>Inhalte der Variablen können über die Fenster Auto und Lokal oder mit einem Mouseover über die Variable im Quellcode eingesehen werden.


<br>Es ist auch möglich sich eine Sammlung von Variablen anzulegen, die sich die IDE merkt und immer den aktuellen Wert anzeigt  Fenster Watch
<br>Die jeweilige Variable kann vom Quelltext per Drag &amp; Drop in das Fenster Watch gezogen werden
<br><br>
<br>Für einen sauber strukturierten Code mit Zeileneinschüben etc. kann die IDE sorgen.
<br>Shortcut

<br>Den Code in der aktuellen Datei auswählen: Ctrl + A
<br>Den ausgewählten Code formatieren: Ctrl + K und dann Ctrl + F


]]></description><link>repository\visual-studio-tipps-und-tricks.html</link><guid isPermaLink="false">repository/Visual Studio - Tipps und Tricks.md</guid><pubDate>Thu, 24 Oct 2024 16:30:59 GMT</pubDate></item><item><title><![CDATA[Was ist Informatik]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Einführung-Informatik" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Einführung-Informatik</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Einführung-Informatik" class="tag" target="_blank" rel="noopener nofollow">#Einführung-Informatik</a> <br>Definition
Informatik ist die Wissenschaft von der systematischen und automatisierten Verarbeitung von Information. Sie erforscht grundsätzliche Verfahrensweisen der Informationsverarbeitung und allgemeine Methoden ihrer Anwendung in den verschiedensten Bereichen. Für diese Aufgaben wendet die Informatik vorwiegend formale und ingenieurmäßig orientierte Techniken an. Durch Verfahren der Modellbildung sieht sie beispielsweise von den Besonderheiten spezieller Datenverarbeitungssysteme ab; sie entwickelt Standardlösungen für die Aufgaben der Praxis. 
~ Gesellschaft für Informatik (1985)
<br><br>
<br>Wahrnehmung der Informatik als eigene Disziplin seit Mitte der 60er Jahre, Kunstwort "Informatik" in Anlehnung an Begriff "Informatik"<br>
 Informatik Bestandteile
<br>Anfang der 70er Jahre erstmalig Informatik als eigenständiger Studiengang
<br><br>
<br>Unterscheidung von Naturwissenschaften durch Betrachtung von Menschen geschaffener Systeme und Strukturen
<br>Unterscheidung von Ingenieurwissenschaften durch Untersuchung immaterieller Produkte

<br>Information und speziell Spftware per se nicht physisch greifbar
<br>Nutzung erst im Zusammenwirken mit materillen Objekten Möglichkeiten


<br>Unterscheidung von Geisteswissenschaften durch Ausrichtung auf praktisch anwendbare Ergebnisse

<br>keine Beschränkung auf Erkenntnisgewinn oder reine Beschreibung von Phänomenen


<br><br> Teilgebiete der Informatik<br><br>Die Theoretische Informatik bildet das Fundament für die anderen Kernbereiche.<br>
Inhalte sind unter anderem:<br>
<br>Theorie der Algorithmen

<br>Komplexitäts-, Berechenbarkeits-, Automatentheorie, Theorie der Datenstrukturen


<br>Ersetzungssysteme und Kalküle

<br>Formale Sprachen, Deduktions- und Transition Systeme, Logik, Computer-Algebra


<br>Theorie der Programmierung

<br>Programmiermethodik, Spezifikation, Verifikation, Semantik


<br>Kommunikationstheorie

<br>Informationstheorie, Codierungstheorie, Kryptographie


<br><br>Die Praktische Informatik befasst sich mit der Entwicklung von allgemeinen Systemen, z.B.<br>
<br>Programmiersprachen und Programmiertechnik

<br>Programmiersprachen und -Werkzeuge


<br>Informationssysteme

<br>Datenbanken, Betriebliche Informationssysteme


<br>Systemsoftware und Systeme mit besonderen Anforderungen

<br>Betriebssysteme, Echtzeitsysteme, Verteilte Systeme


<br>Dialogsysteme und Computergrafik

<br>Kommunikationssysteme, Benutzerschnittstellen


<br>Künstliche Intelligenz

<br>Wissenschaftsbasierte Systeme, Lernsysteme, Robotik


<br><br>Die Technische Informatik beschäftigt sich mit den Hardware-Grundlagen, wie etwa:<br>
<br>Rechnerorganistation

<br>Modellierung, Simulation und Entwurf von Rechnern und Hardwarekomponenten


<br>Grundlagen und Schaltungstechnik

<br>Entwurf und Realisierung von Schaltnetzen und Schaltwerken, Entwurfsmethodik und - Werkzeuge für VLSI


<br>Architekturkonzepte

<br>Multiprozessor- und Multirechnersysteme, innovative Rechnerarchitekturen


<br>Vernetzung von Rechnersystemen

<br>Rechnernetze, Verteilte Systeme, Telematik


<br><br>Die Angewandte Informatik ist immer mit einem Anwendungsbereich verbunden. Beispiele hierfür sind: <br>
<br>Wirtschaftsinformatik 

<br>Volks- und betriebswirtschaftliche Anwendungen 


<br>Medizininformatik

<br>Unterstützung von Diagnose und Verwaltung 


<br>Ingenieurinformatik 

<br>Einsatz in Elektrotechnik, Maschinenbau, Bauingenieurwesen, ...


<br>Informatik in Natur- und Geisteswissenschaften 

<br>Einsatz in Physik, Mathematik, Linguistik, ... 


]]></description><link>repository\was-ist-informatik.html</link><guid isPermaLink="false">repository/Was ist Informatik.md</guid><pubDate>Thu, 24 Oct 2024 16:31:23 GMT</pubDate></item><item><title><![CDATA[Zahlendarstellungen]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:IT-Systeme" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IT-Systeme</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:IT-Systeme" class="tag" target="_blank" rel="noopener nofollow">#IT-Systeme</a> <br>Wir haben ein Berechnungsmodell vorgestellt (RAMs), mit deren Hilfe alles prinzipiell berechenbare auch tatsächlich ausgerechnet werden kann.<br>
Das Modell benutzt aber natürliche Zahlen und es stellt sich die Frage: Wie können natürliche Zahlen in der Realität tatsächlich gespeichert und verarbeitet werden.<br>
Da unsere Rechner aus logischen Schaltkreisen aufgebaut sind, welche mit Zahlen aus  arbeiten können, brauchen wir eine Möglichkeit um nur mit en und en alle möglichen natürlichen Zahlen darstellen zu können.<br>
Wie das geht, machen wir uns im Folgenden klar.<br><br>Dazu vergegenwärtigen wir uns zunächst, wie wir natürliche Zahlen im Dezimalsystem aufschreiben und interpretieren.<br>
Zunächst ist eine Dezimalzahl ja nichts anderes als eine Zeichenkette, also eine Aneinanderreihung von Symbolen, die aus der Menge  entnommen werden. Wir stellen fest:<br>
 (d.h. die Größe von  ist gleich )<br>Definition 5
Eine endliche, nicht leere Menge von Symbolen heißt Alphabet. Eine Aneinanderreihung von Symbolen aus einem Alphabet nennen wir Zeichenkette oder Wort.
<br>Ist nun ein Wort  gegeben, wobei  und  so interpretieren wir sie mit dem Wert<br><br>In Summenschreibweise:<br><br>Feststellungen:<br>
<br>Die größte Zahl, die im Dezimalsystem mit nur einer Ziffer dargestellt werden kann, ist  und  ist um  kleiner als .
<br>Die größte Zahl, die im Dezimalsystem mit zwei Ziffern dargestellt werden kann ist  und  ist um  kleiner als .
<br>Die größte Zahl die im Dezimalsystem mit  Ziffern dargestellt werden kann ist  und diese Zahl ist um  kleiner als <br>
(und ). (Die Anzahl der Symbole in der Zeichenkette  ist gleich .)
<br>Alle natürlichen Zahlen, die kleiner sind als , können mit  oder weniger Symbolen dargestellt werden. Wie viele solche Zahlen gibt es?
<br>Wie viele nicht leere Zeichenketten der Länge  bei der die Symbole aus  entnommen werden, gibt es?
<br>Folgerung: Es gibt genau so viele Zeichenketten der Länge  (über Symbolen aus ), wie es Zalen gibt die kleiner als  sind.
<br>Es gibt also eine -zu--Beziehung zwischen Wörtern über  und Zahlen.<br>Aber das heißt nicht, dass Wörter Zahlen sind oder umgekehrt!<br>Zeichenketten, wie wir sie bisher gesehen haben, sind Codierungen von Zahlen.<br>
Eine Zahl ist ein abstrakter Begriff! Aber mit der Dezimaldarstellung haben wir eine Möglichkeit gefunden, Zahlen darzustellen. Ist die  für das Prinzip dabei relevant, oder könnte man das auch auf Basis einer anderen Zahl betreiben (z.B. )?<br>Wir wollen zunächst unser intuitives Verständnis des Dezimalsystems mathematisch exakt fassen.<br>
Manchmal wollen wir im Text ganz klar machen, dass und an welcher Stelle man nun gerade über eine Zeichenkette redet, die eine Zahl in Dezimaldarstellung codiert. Wir schreiben diese Zeichenkette dann mit Index .<br>Beispiel: Die Zahl  schreiben wir dann ganz deutllich als .<br>
Wir werden ähnliche Indizes später auch für andere Zahlendarstellungen (Binär, Oktal, Hexadezimal) einführen. Im Falle der Dezimaldarstellung lassen wir den Index dann auch häufig wieder weg, es sei denn wir wollen explizit auf diese Darstellung hinweisen.<br>Definition 6
Ist  ein Alphabet, so sei  die Menge aller nicht leeren, endlichen Wörter, die wir mit den Symbolen aus  bilden können.
<br>Beispiel: Ist , so ist<br>
<br>
Zum Beispiel ist auch  oder .<br>Definition 7 (Konkatenation)
Ist  ein Alphabet mit  Symbolen und sind<br>
 so sEI<br>
die Konkatenation von  und .
<br>Die Konkatenation ist also nicht anderes als das Hintereinander hängen von Zeichenketten.<br>Zunächst brauchen wir eine Schreibweise für die Division mit Rest. Dabei sollte klar sein, dass es für alle Zahlen , eindeutige Zahlen  und  gibt, so dass <br>Definition 8 (Operator für die Division mit Rest)
Für alle Zahlen  sei  (sprich:  modulo ) diejenige Zahl  für die es ein  gibt, so dass .
<br>Definition 9 (Notation für Auf-/Abrunden)
Für eine nicht negative, rationale Zahl , sei  die größte natürliche Zahl  mit . Weiterhin sei   die kleinste natürliche Zahl  mit .
<br>Wir definieren nun die Dezimaldarstellung von Zahlen als eine Abbildung von den natürlichen Zahlen nach  wie folgt:<br>Definition 10 (Dezimaldarstellung)
Es sei  für  wie folgt definiert:

<br>Ist  so ist  (mit  ist hier das entsprechende Symbol für  aus  gemeint),
<br>ansonsten ist 

<br>Auf der anderes Seite können wir jeder nicht leeren Zeichenkette über  eine natürliche Zahl wie folgt zuordnen:<br>Definition 11 (Interpretation der Dezimaldarstellung)
Es sei  wie folgt definiert:

<br>Es sei .<br>
Der Index  wird an dieser Stelle mit angegeben, um klar zu machen, dass es sich bei den Eringaben  um Symbole handelt und bei den Ausgaben um Zahlen.
<br>Ist  und  so sei<br>


<br><br>Natürlich kann man Zahlen über allen möglichen Alphabeten darstellen, uns interessiert aber vor allem . Offensichtlich ist .<br>
Wir gehen analog zur Dezimaldarstellung vor und stellen fest: Die einzigen beiden Zahlen, die mit nur einem Symbol aus  dargestellt werden können, sind die Null und die Eins.<br>
Beim Dezimalsystem konnten wir wird die Zahlen Null bis Neun nur mit einem Symbol darstellen. Wir erinnern uns: . Und zur Darstellung der Zehn im Dezimalsystem mussten wir zum ersten mal zwei Symbole bemühen.<br>
Da , müssen wir im Binärsystem bereits bei der Zwei zwei Symbole bemühen.<br><br>Während im Dezimalsystem jeweils beim Erreichen der nächsthöheren Zehnerpotenz (also bei , , , ) die Zahlendarstellung um ein Symbol wächst, geschieht das beim Binärsystem jeweils beim erreichen der nächsthöheren Zweierpotenz (also bei , , , ).<br>Wenn wir deutlich zum Ausdruck bringen wollen, dass es sich bei einem Wort um die Binärdarstellung einer Zahl handelt, versehen wir das Wort mit dem Index .<br>Wir geben, analog zur Dezimaldarstellung, nun der Binärdarstellung eine mathematisch exakte Bedeutung, indem wir ganz klar machen,<br>
<br>wie die Binärdarstellung einer natürlichen Zahl aussieht und
<br>welche Zahl jeweils von einem Wort über  codiert wird.<br>
Wir definieren nun also die Binärdarstellung von Zahlen als eine Abbildung von den natürlichen Zahlen nach  wie folgt:
<br>Definition 12
Es sei  für  wie folgt definiert:

<br>Ist , so ist .
<br>Ist , so ist .
<br>Ansonsten ist 

<br>Beachte: Die Funktion  produziert abgesehen von  keine Wörter mit führenden -en. D.h. es gibt kein , so dass in  ganz links eine  stünde.<br>Auf der anderen Seite können wir jeder nicht leeren zeichenkette über  eine natürliche Zahl wie folgt zuordnen:<br>Definition 13 (Interpretation der Binärdarstellung)
Es sei  wie folgt definiert:

<br>Es sei  und .
<br>Ist  so sEI<br>


<br><br>Die Binärdarstellung können Rechner gut verstehen, weil sie aus logischen Schaltkreisen aufgebaut sind.<br>Menschen sind aber die Dezimaldarstellung gewohnt ( Hände,  Finger); letztere hat den Vorteil, dass die Zahlen durch kürzere Worte dargestellt werden können.<br>
Leider ist die Umrechnung zwischen Dezimal und Binär nicht immer so leicht. Daher ist in der Informatik eine weitere Zahlendarstellung start in Gebrauch: Die Hexadezimaldarstellung<br>
Dabei handelt es sich um Zahlen zur Basis . Da es sich um eine Zweierpotenz handelt, passen Binär- und Hexadezimaldarstellung besser zusammen.<br>
In der Dezimaldarstellung haben wir Zahlen mit Hilfe des Alphabets  dargestellt, in Binär mit Hilfe des Alphabets .<br>Für die Hexadezimaldarstellung benötigen wir  weitere Symbole, man benutzt gemeinhin das Alphabet.<br><br>Die Interpretation von Wörtern über  gestaltet sich dann ganz analog zur Dezimal- und zur Binärdarstellung.<br>
Wir definieren die Hexadezimaldarstellung von Zahlen als eine Abbildung von den natürlichen Zahlen nach  wie folgt:<br>Definition 14
Es sei  für  wie folgt definiert:

<br>Ist , so ist <br>
Ist , so ist <br>
<br>
Ist , so ist <br>
Ist , so ist <br>
Ist , so ist <br>
Ist , so ist <br>
Ist , so ist <br>
Ist , so ist <br>
Ist , so ist 
<br>Ansonsten ist 

<br>Analog zu Dezimal- und Binärdarstellung versehen wir Wörter versehen wir Wörter mit dem Index , wenn wir verdeutlichen wollen, dass wir es an der Stelle mit einer Hexadezimaldarstellung zu tun haben.<br>Die Bestimmung des Wertes einer hexadezimalen Zeichenkette ist nun keine Überraschung mehr:<br>Definition 15 (Interpretation der Hexadezimaldarstellung)
Es sei  wie folgt definiert:

<br>Es sei <br>
<br>
Es sei <br>
Es sei <br>
<br>
Es sei 
<br>Ist  und  so sei<br>


<br><br>Wir betrachten beispielhaft die Binärzahl:<br>
<br>Jedem Bit in der Zahlendarstellung ist eine Zweierpotenz zugeordnet. Je weiter ein Bit rechts in der Zahl steht, desto kleiner ist der Wert, der dieser Zahl zugeordnet wird. Wir sind gewohnt, das so zu machen, das muss aber nicht immer so gemacht werden!<br>Wir sagen: Ein Bit  ist niedrigwertiger als ein Bit , wenn  eine kleinere Zweierpotenz zugeordnet wird als . In diesem Fall ist  höherwertig. Das niedrigwertigste Bit eines binären Wortes heißt least significant bit (LSB), das höchstwertigste heißt most significant bit (MSB). <br>Wenn in einer Zahlendarstellung (wie von uns eingeführt) die Bits von  bis  durchnummeriert werden und das LSB die Nummer  erhält, so nennt man die Darstellung little-endian (auf Bit-Ebene; die Endianess spielt auch auf Byte-Ebene eine Rolle). Ist die Zuordnung der Wertigkeiten anders herum, sprechen wir von big-endians.<br> Bit werden zu einem Byte zusammengefasst. In einem Byte können natürliche Zahlen aus  gespeichert werden.<br>
Ein halbes Byte (also  Bit) werden als Nibble bezeichnet. In einem Nibble können also natürliche Zahlen aus  gespeichert werden. Das ist genau so viel wie in einer hexadezimalen Ziffer. Ein Byte kann durch zwei hexadezimale Ziffern dargestellt werden.<br>Rechnerarchitekturen arbeiten mit verschiedenen Busbreiten und Registergrößen, d.h. Anzahlen von Bits, die Parallel zwischen verschiedenen Komponenten innerhalb des Hauptprozessors oder auch im ganzen System parallel verschickt werden können. Üblich sind dabei fast ausschließlich Zweierpotenzen und vielfache von , üblicherweise , ,  oder  Bit. Je nach Architektur des Rechners, der gerade vorliegt, spricht man von einem (Maschinen-)Wort (engl. word).<br>Im Speicher eines Rechners können Daten im Allgemeinen auf Byte-Ebene angesprochen werden.<br>
Bei Architekturen mit mehr als 8 Bit, werden dann mehrere Byte zu einer Zahl zusammengefasst. Gängig sind z.B.  Bit-Zahlen, die sich aus  Byte zusammensetzen.<br><br>Größere Datenmengen werden gemeinhin in Vielfachen von Bits oder Bytes angegeben. Normalerweise geht dabei ein weiterer Faktor, den man mit Kilo abkürzt, mit ein.<br>
Bei klassischen SI-Einheiten (d.h. metrische Einheiten nach dem International System of Units), bezeichnet ein Kilo dabei einen Faktor von . Im IT-Umfeld hat arbeitet man aber gerne mit Zweierpotenzen, hier kann mit Kilo auch ein Faktor von  gemeint sein.<br>
Nach Normen der ISO bedeutet “Kilo” also stets einen Faktor von . Für den Faktor  wurde das Kürzel kibi eingeführt. <br>Auf der anderen Seite wird das Kürzel “Kilo” traditionell in der IT für den Faktor  verwendet und weiterhin verbreitet verwendet (z.B. vom Joint Electron Device Engineering Council (JEDEC)).<br>
Der weise Informatiker schaut bei diesen Kürzeln also am besten immer genau hin, was denn nun eigentlich gemeint ist.<br>Um große Datenmengen zu bezeichnen, werden weitere Kürzel verwendet, die sämtlich Vielfache von  bzw.  sind:<br><br>Die Faktorkürzel in der oberen Hälfte der Tabelle werden, wie erwähnt, oft auch noch für die entsprechenden Zweierpotenzen verwendet.<br><br>Inzwischen sollte geklärt sein, wie Zahlen mit Hilfe von Bits gespeichert werden können.<br>
In einem Rechner soll mit Zahlen aber auch gearbeitet und insbesondere gerechnet werden.<br>
Wir betrachten im Folgenden wie Addition, Subtraktion und Multiplikation im Binärsystem realisiert werden kann.<br><br>Wir erinnern uns, wie die Addition zweier Dezimalzahlen mit der Schulmethode funktioniert.<br>
Wir wissen: Ein Wort  in Dezimaldarstellung kann als  interpretiert werden.<br>
Weiterhin ist<br><br>Wie man sieht, kann aber die Summe zweier Zahlen, die je durch eine Dezimalziffer dargestellt werden, so groß werden, dass für die Darstellung des Ergebnisses zwei Ziffern benötigt werde<br>Lemma 16
Für zwei Ziffern  gibt es eine Ziffer  und eine Ziffer , so dass<br>

<br>Ist  und , so ist<br><br>folglich ist in dem Fall  und . Wir nennen  den einfachen Übertrag (engl. carry) aus der Addition von  und . Der Übertrag kann nie größer als  sein, da die Summe zweier Dezimalziffern nie größer als  sein kann. Wir nennen  die einfache Zifferpartialsumme aus der Addition von  und .<br>Bei der Addition nach der Schulmethode kann an einer Stelle ein Übertrag aus niedrigwertigeren Stellen mit eingehen. <br>Da die einfache Zifferpartialsumme zweier Dezimalziffern nie größer als  sein kann, können wir eine analoge Überlegung formulieren, bei der ein Übertrag  aus niedrigwertigeren Stellen mit eingeht:<br>Lemma 17
Für zwei Ziffern  und eine weitere Ziffer  gibt es eine Ziffer  und eine Ziffer , so dass<br>

<br>Für Ziffern  und  in  sei dann  der (volle) Übertrag aus der Addition von ,  und  und  sei die (volle) Zifferpartialsumme aus der Addition von ,  und  .<br>Wir formulieren die "Schulmethode" als Algorithmus:<br>Additionsalgorithmus
Eingabe: Ziffern , <br>
Ausgabe: Ziffern ,<br>
so dass <br>
Setze  auf <br>
Setze  auf 
Solange  kleiner als  ist, wiederhole folgendes:<br>
Es sei  der Übertrag aus der Addition von  und <br>
Es sei  die Zifferpartialsumme aus der Addition von  und <br>
Setze den Wert von  auf den von <br>
Erhöhe  um 
Setze den Wert von  auf den von <br>
Gib 
<br>Dieser Algorithmus kann ganz analog auf die Binärdarstellung übertragen werden. Wir machen uns dazu zunächst klar, wie man zwei Bits addiert. Dazu betrachten wir folgende Tabelle:<br><br>Analog zur Dezimaldarstellung wird sofort klar:<br>Lemma 18
Für zwei Ziffern  gibt es eine Ziffer  und eine Ziffer  so dass<br>

<br>Wenn wir einen ähnlichen Algorithmus wie in der Dezimaldarstellung verwenden wollen, müssen wir jeweils den Übertrag berücksichtigen. Wir haben schon gesehen, dass dieser auch im Falle der Binärdarstellung höchstens  betragen kann. <br>Wir betrachten die Additionstabelle mit Übertrag:<br><br>Wieder ist sofort klar:<br>Lemma 19
Für zwei Ziffern  gibt es eine weitere Ziffer  und eine Ziffer  so dass<br>

<br>Die Ziffer  aus obigem Lemma nennen wir wieder den Übertrag aus der Addition von ,  und  und  nennen wir wieder Zifferpartialsumme.<br>Dann können wir den Algorithmus zur Addition von Binärzahlen fast -zu- aus dem Dezimalsystem übernehmen, es ändert sich nur die Basis von  zu , d.h. überall, wo im Dezimalalgorithmus eine  steht, wird diese durch  ersetzt.<br><br>Es wäre prinzipiell machbar ganz analog zur Addition auch einen Subtraktionsalgorithmus zu formulieren. <br>Das wird in der Praxis aber gar nicht gemacht, weil man den Additionsalgorithmus für die Subtraktion wiederverwenden kann. Auf diese Weise spart man sich Platz für weitere logische Schaltungen. <br>Der Trick dabei ist, wie binäre Wörter als negative Zahlen interpretiert werden. Bisher kennen wir ja nur eine Darstellung für nichtnegative natürliche Zahlen. Wir führen im Folgenden also zunächst eine Darstellung für negative Zahlen ein.<br>
Dazu führen wir uns zunächst folgenden Sachverhalt noch einmal vor Augen:<br>Satz 1
Für alle  gilt:<br>

<br>Für die Binärdarstellung besagt der Satz, dass Bit  um  mehr Wert besitzt als alle niedrigwertigeren Bits zusammen (selbst wenn diese alle auf  gesetzt sind).<br>In der sogenannten Zweierkomplementdarstellung geht das MSB nicht positiv sondern negativ in die Summe ein. Wir interpretieren also ein ganz normales binäres Wort wie folgt.<br>Definition 20 (Interpretation der Binärdarstellung im Zweierkomplement)
Für ein  sei  :  wie folgt definiert:<br>
wobei 
<br>
<br>Die Funktion  ist nur für -stellige Eingaben definiert!
<br>Das MSB geht negativ in die Summe ein.
<br>Alle anderen Bits werden ganz normal, wie in der bekannten Binärdarstellung interpretiert.
<br><br>Wie groß ist der Wertebereich von ?<br>Antwort: Für alle  (das heißt:  ist ein Wort mit  Symbolen aus ), ist . Wie groß ist diese Menge?<br>Wie groß ist der Wertebereich von  für ein beliebiges ?<br>Das begegnet einem z.B. in der Programmierung immer wieder. Oft hat z.B. ein int-Wert in C++ oder Java den Wertebereich . Das liegt daran, dass int-Werte Zweierkomplement-Interpretationen von Binärwörtern der Breite  Bit sind.<br>Wir wissen nun, wie man binäre Worte mit Hilfe der Zweierkomplementdarstellung als negative Zahlen interpretieren kann.<br>
Aber wie geht es anders herum, also wie findet man die Zweierkomplementdarstellung für eine konkrete Zahl? <br>Dazu muss man sich zuerst über die gewünschte Bitbreite klar werden. Eine Zahl  sieht in Zweierkomplementdarstellung mit Bitbreite  anders aus als mit Bitbreite . Vor allem muss die Bitbreite auch ausreichend sein, um  überhaupt darstellen zu können. <br>Wir wissen, dass wir mit  Bits nur Zahlen im Intervall  überhaupt darstellen können.<br>Für ein Symbol  und eine natürliche Zahl  sei  die -fache Konkatenation von . Für ein Wort  sei  die Anzahl der Symbole in .<br>Definition 21
Für  sei  :  für  wie folgt definiert:

<br>Ist  nichtnegativ, so ist , wobei .
<br>Ist  negativ, so ist , wobei 

<br>Beachte:<br>
<br>Für eine negative Zahl  gilt: .
<br>Der Wertebereich von  umfasst ausschließlich binäre Wörter mit genau der Länge .
<br>Wir haben gesehen, dass die Funktionen  und  auf den Index angewiesen sind; sie machen ohne Index nicht viel Sinn.<br>
Um Schreibarbeit zu sparen, treffen wir aber folgende Vereinbarung:<br>Definition 22 ( ohne Index)

<br>Ist  ein Wort, so sei 

<br>Lemma 23
Es sei  ein binäres Wort mit  Symbolen, so dass . Dann gilt:<br>

<br>Zur einfachen Berechnung von  wenn  bekannt ist, kann man folgenden Satz benutzen:<br>Satz 2
Es sei  und  und . Ist  so sei<br>
Dann ist<br>

]]></description><link>repository\zahlendarstellungen.html</link><guid isPermaLink="false">repository/Zahlendarstellungen.md</guid><pubDate>Thu, 24 Oct 2024 16:30:59 GMT</pubDate></item><item><title><![CDATA[(Naive) Mengenlehre]]></title><description><![CDATA[<a class="tag" href="?query=tag:Aufschrieb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Aufschrieb</a> <a class="tag" href="?query=tag:Lineare-Algebra-und-analytische-Geometrie" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Lineare-Algebra-und-analytische-Geometrie</a> 
 <br><a href=".?query=tag:Aufschrieb" class="tag" target="_blank" rel="noopener nofollow">#Aufschrieb</a> <a href=".?query=tag:Lineare-Algebra-und-analytische-Geometrie" class="tag" target="_blank" rel="noopener nofollow">#Lineare-Algebra-und-analytische-Geometrie</a> <br>
<br>Beispiele, Definitionen einer Menge nach Georg Cantor
<br>Darstellung von Mengen
<br>Mengenoperationen und Mengenalgebra
<br>Mengen und Aussagen
<br>Beziehungen zwischen Mengen
<br>Endliche Mengen, unendliche Mengen
<br><br>
<br>Elemente in Mengen müssen einzigartig sein
<br>Beispiele für Mengen

<br>Alle im Hörsaal anwesenden Personen
<br>Alle eingeschriebenen Studenten der HS-Kempten


<br>Was ist eine Menge?
Eine Menge ist die Zusammenfassung bestimmter, wohlunterschiedener Objekte unserer Anschauung oder unseres Denkens, wobei von jedem dieser Objekte eindeutig feststeht, ob es zur Menge gehört oder nicht.<br>
Die Objekte der Menge heißen Elemente
<br>Wir wollen im folgenden die drei gebräuchlichsten Formen zur Darstellung von Mengen kennenlernen:<br>
<br>Venn-Diagramme (Mengendiagramme)
<br>Aufzählung der Elemente der Menge
<br>Angabe einer Eigenschaft, welche die Elemente der Menge eindeutig charakterisiert
<br>In einem Venn-Diagramm werden ein Universum, die sog. Grundmenge G und Menge des Universums dargestellt<br>
Einzelne Elemente können als Punkte dargestellt werden. Mengen werden als ihre Elemente umfassende Formen dargestellt. Jene können sich selbst einschließen oder schneiden.<br>a) Stellen Sie die Menge der Buchstaben des Wortes MAUSEFALLE als Mengen dar:<br><br>b) Menge  der Buchstaben des Wortes INFORMATION<br><br>Übung 1: Geben Sie die Menge  aller Quadratzahlen zwischen 2 und 30 an!<br><br>Übung 2: Geben Sie die Menge  aller durch drei teilbaren natürlichen Zahlen zwischen 7 und 13 an!<br><br>Charakterisierung von Mengen durch Eigenschaften
Besitzen alle Elemente einer Menge  in einem Universum  eine bestimmte Eigenschaft  und besitzen alle Elemente, die nicht zu  gehören diese Eigenschaft nicht, dann kann  durch die Eigenschaft  charakterisiert werden:

<br><br>\displaylines{<br>
4 \in A \<br>
{ 4,5 } \notin A \<br>
{ 4,5 } \subseteq A \<br>
}<br><br>\boxed{ A \cap B = { 4,5,6 } }<br><br>\bar{A}^G={ 8,10,20 }<br><br>\boxed{ A \text{\} B = { 1,3 } }<br><br>A \times B = { (a,b)|a\in A, b \in B }<br><br>\mathcal{P}(G)={ U|U \subset G }<br><br>\emptyset={  }<br><br>(A \cup B) \cup C = A \cup (B \cup C)<br><br>(A \cap B) \cap C = A \cap (B \cap C)<br><br>A \cup B=B \cup A<br><br>A\cap B = B \cap A<br><br>A \cup (B \cap C) = (A \cup B) \cap (A \cup C)<br><br>A\cap(B \cup C)=(A\cap B)\cup(A\cap C)<br><br>A\cup(A\cap B)=A<br><br>A\cap (A\cup B) = A<br><br>A\cup A=A<br><br>A\cap A=A<br><br>\bar{A\cup B}=\bar{A}\cap \bar{B}<br><br>\bar{A\cap B}=\bar{A}\cup \bar{B}<br><br>\bar{\bar{A}}=A<br><br>A\cup \bar{A}=G \quad \text{und} \quad A\cap \bar{A}=\emptyset<br><br>A \cup \bar{A}=G \quad \text{und} \quad A \cap \bar{A} = \emptyset <br><br>A \cup G = G \quad \text{und} \quad A \cap G = A<br><br>\bar{G} = \emptyset \quad \text{und} \quad \bar{\emptyset} = G<br><br>\mathbb{N}={ 1,2,3,4,\dots }<br><br>\mathbb{Z}={ 0,1,-1,2,-2,\dots }<br><br>\mathbb{Q}={ (a,b) \in \mathbb{Z} \times \mathbb{Z} \text{\}{ 0 } }<br><br>a \sim{R} b \quad \text{oder} \quad b \sim{R} a<br><br>R_{5}:={ (x,y),(z,y),(y,z) }<br><br>\begin{align}<br>
\mathbb{Z} &amp; = &amp; { 0,1,-1,2,-2,3,-3,4,-4,\dots } \<br>
3\mathbb{Z} &amp; = &amp; { 0,3,-3,6,-6,9,-9,\dots } \<br>
3\mathbb{Z}+1 &amp; = &amp; { 1,4,-2,7,-5,10,-8 } \<br>
3\mathbb{Z}+2 &amp; = &amp; { 2,5,-1,8,-4,11,-7,\dots }<br>
\end{align}<br>]]></description><link>repository\(naive)-mengenlehre.html</link><guid isPermaLink="false">repository/(Naive) Mengenlehre.md</guid><pubDate>Thu, 24 Oct 2024 16:30:58 GMT</pubDate></item><item><title><![CDATA[Informatik Bestandteile]]></title><description><![CDATA[ 
 <br>Informatik<br>Mathematik<br>Elektrotechnik<br>Wirtschaftswissenschaften]]></description><link>repository\attachments\informatik-bestandteile.html</link><guid isPermaLink="false">repository/Attachments/Informatik Bestandteile.canvas</guid><pubDate>Wed, 09 Oct 2024 14:45:22 GMT</pubDate></item><item><title><![CDATA[Informationsverarbeitung]]></title><description><![CDATA[ 
 <br>Information<br>Semantische Komponente:<br>
trägt bestimmte Bedeutung<br>Syntaktische Komponente:<br>
äußeres Erscheinungsbild, per se bedeutungslos<br>Daten<br>DatenRepräsentationAbstraktion/InterpretationVerarbeitungVerarbeitung]]></description><link>repository\attachments\informationsverarbeitung.html</link><guid isPermaLink="false">repository/Attachments/Informationsverarbeitung.canvas</guid><pubDate>Wed, 09 Oct 2024 14:45:23 GMT</pubDate></item><item><title><![CDATA[Teilgebiete der Informatik]]></title><description><![CDATA[ 
 <br>Technische Informatik<br>
Konstruktion von Rechnern, Speicherchips, Prozessoren, Peripherie...<br>Angewandte Informatik<br>
Einsatz von Rechnern in verschiedenen Anwendungsbereichen<br>Praktische Informatik<br>
Konstruktion von System- und Anwendungssoftware<br>Theoretische Informatik<br>
Erforschung der theoretischen Grundlagen]]></description><link>repository\attachments\teilgebiete-der-informatik.html</link><guid isPermaLink="false">repository/Attachments/Teilgebiete der Informatik.canvas</guid><pubDate>Wed, 09 Oct 2024 14:45:23 GMT</pubDate></item></channel></rss>